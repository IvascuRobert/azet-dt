{"version":3,"file":"src_app_shop-authentication_shop-authentication_module_ts.js","mappings":"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","names":["U","this","o","e","Object","set","enumerable","configurable","r","F","t","constructor","n","email","password","firstName","f","lastName","confirmPassword","emailLF","loginForm","get","passwordLF","firstNameRF","registerForm","lastNameRF","emailRF","passwordRF","confirmPasswordRF","emailFPF","forgetPasswordForm","ngOnInit","subs","sink","valueChanges","subscribe","length","setErrors","passwordMismatch","onSubmitLoginForm","getRawValue","authenticationService","login","console","log","onSubmitRegisterForm","onSubmitForgetPasswordForm","forgotPassword","changeTab","reset","tabIndex","ngOnDestroy","unsubscribe","l","selectors","Y","path","component","s","Z","u","imports","h","b"],"sourceRoot":"webpack:///","sources":["./node_modules/subsink/dist/es2015/subsink.js","./src/app/shop-authentication/shop-authentication.component.html","./src/app/shop-authentication/shop-authentication.component.ts","./src/app/shop-authentication/shop-authentication-routing.module.ts","./src/app/shop-authentication/shop-authentication.module.ts"],"sourcesContent":["var isFunction = function (fn) { return typeof fn === 'function'; };\n/**\n * Subscription sink that holds Observable subscriptions\n * until you call unsubscribe on it in ngOnDestroy.\n */\nvar SubSink = /** @class */ (function () {\n    /**\n     * Subscription sink that holds Observable subscriptions\n     * until you call unsubscribe on it in ngOnDestroy.\n     *\n     * @example\n     * In Angular:\n     * ```\n     *   private subs = new SubSink();\n     *   ...\n     *   this.subs.sink = observable$.subscribe(...)\n     *   this.subs.add(observable$.subscribe(...));\n     *   ...\n     *   ngOnDestroy() {\n     *     this.subs.unsubscribe();\n     *   }\n     * ```\n     */\n    function SubSink() {\n        this._subs = [];\n    }\n    /**\n     * Add subscriptions to the tracked subscriptions\n     * @example\n     *  this.subs.add(observable$.subscribe(...));\n     */\n    SubSink.prototype.add = function () {\n        var subscriptions = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            subscriptions[_i] = arguments[_i];\n        }\n        this._subs = this._subs.concat(subscriptions);\n    };\n    Object.defineProperty(SubSink.prototype, \"sink\", {\n        /**\n         * Assign subscription to this sink to add it to the tracked subscriptions\n         * @example\n         *  this.subs.sink = observable$.subscribe(...);\n         */\n        set: function (subscription) {\n            this._subs.push(subscription);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Unsubscribe to all subscriptions in ngOnDestroy()\n     * @example\n     *   ngOnDestroy() {\n     *     this.subs.unsubscribe();\n     *   }\n     */\n    SubSink.prototype.unsubscribe = function () {\n        this._subs.forEach(function (sub) { return sub && isFunction(sub.unsubscribe) && sub.unsubscribe(); });\n        this._subs = [];\n    };\n    return SubSink;\n}());\nexport { SubSink };\n","<div class=\"row login-container\">\r\n  <div class=\"col-8\">\r\n    <mat-tab-group mat-stretch-tabs\r\n                   mat-align-tabs=\"start\"\r\n                   class=\"mat-elevation-z4\"\r\n                   [selectedIndex]=\"tabIndex\"\r\n                   (selectedIndexChange)=\"changeTab($event)\">\r\n      <mat-tab>\r\n        <ng-template mat-tab-label>\r\n          <span class=\"material-icons\">\r\n            login\r\n          </span>\r\n          AUTENTIFICARE\r\n        </ng-template>\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        <mat-card class=\"login-card\"\r\n                  style=\"font-size: 1.2rem;\">\r\n          <mat-card-content>\r\n            <div class=\"row\">\r\n              <div class=\"col-12 text-center mb-4\">\r\n                Bine ați venit în\r\n                <span class=\"primary\">\r\n                  AZET D.T.\r\n                </span>\r\n              </div>\r\n              <div class=\"col-6 text-center\">\r\n                <button mat-stroked-button\r\n                        type=\"button\"\r\n                        class=\"py-2\"\r\n                        color=\"primary\">\r\n                  <i class=\"fab fa-google\"></i>\r\n                  Autentifică-te cu GOOGLE\r\n                </button>\r\n              </div>\r\n              <div class=\"col-6 text-center\">\r\n                <button mat-stroked-button\r\n                        type=\"button\"\r\n                        class=\"py-2\"\r\n                        color=\"primary\">\r\n                  <i class=\"fab fa-facebook\"></i>\r\n                  Autentifică-te cu FACEBOOK\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"row my-4\">\r\n              <div class=\"col-12\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-4 align-self-center\">\r\n                    <mat-divider></mat-divider>\r\n                  </div>\r\n                  <div class=\"col-2 text-center\"\r\n                       style=\"font-size: 2rem;\">\r\n                    SAU\r\n                  </div>\r\n                  <div class=\"col-4 align-self-center\">\r\n                    <mat-divider></mat-divider>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <form class=\"row justify-content-center\"\r\n                  (ngSubmit)=\"onSubmitLoginForm()\"\r\n                  [formGroup]=\"loginForm\">\r\n              <mat-form-field class=\"col-12 w-100 my-1\"\r\n                              appearance=\"outline\">\r\n                <mat-label>Email</mat-label>\r\n                <input matInput\r\n                       placeholder=\"pat@example.com\"\r\n                       formControlName=\"email\"\r\n                       autocomplete=\"username\"\r\n                       required>\r\n                <mat-error *ngIf=\"emailLF.invalid\">\r\n                  {{emailLF.errors | formControlErrorInterpretation}}\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-12 w-100 my-1\"\r\n                              appearance=\"outline\">\r\n                <mat-label>Parola</mat-label>\r\n                <input matInput\r\n                       #plf\r\n                       formControlName=\"password\"\r\n                       autocomplete=\"current-password\"\r\n                       [type]=\"hidePasswordLF ? 'password' : 'text'\"\r\n                       required>\r\n                <button mat-icon-button\r\n                        type=\"button\"\r\n                        matSuffix\r\n                        (click)=\"hidePasswordLF = !hidePasswordLF\"\r\n                        [attr.aria-label]=\"'Hide password'\"\r\n                        [attr.aria-pressed]=\"hidePasswordLF\">\r\n                  <span class=\"material-icons\">\r\n                    {{hidePasswordLF ? 'visibility_off' : 'visibility'}}\r\n                  </span>\r\n                </button>\r\n                <mat-hint align=\"end\">{{plf.value.length}} / 8</mat-hint>\r\n                <mat-error *ngIf=\"passwordLF.invalid\">\r\n                  {{passwordLF.errors | formControlErrorInterpretation}}\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <button mat-raised-button\r\n                      type=\"submit\"\r\n                      class=\"col-6\"\r\n                      color=\"primary\">Autentifică-te</button>\r\n              <!-- [disabled]=\"loginForm.invalid || (loadingLogin$ | async)\" -->\r\n            </form>\r\n            <div class=\"row\">\r\n              <div class=\"col-12 text-center my-2\">\r\n                <button mat-button\r\n                        type=\"button\"\r\n                        class=\"primary\"\r\n                        (click)=\"changeTab(2)\">Ți-ai uitat parola?</button>\r\n              </div>\r\n              <div class=\"col-12 text-center\">\r\n                <span class=\"mx-1\">Dacă ești un utilizator nou atunci</span>\r\n                <button mat-button\r\n                        type=\"button\"\r\n                        color=\"primary\"\r\n                        (click)=\"changeTab(1)\">Înregistrează-te</button>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label>\r\n          <span class=\"material-icons\">\r\n            how_to_reg\r\n          </span>\r\n          ÎNREGISTRARE\r\n        </ng-template>\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        <mat-card class=\"login-card\"\r\n                  style=\"font-size: 1.2rem;\">\r\n          <mat-card-content>\r\n            <div class=\"row\">\r\n              <div class=\"col-12 text-center mb-4\">\r\n                Alătură-te comunității\r\n                <span class=\"primary\">\r\n                  AZET D.T.\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <form class=\"row justify-content-center\"\r\n                  (ngSubmit)=\"onSubmitRegisterForm()\"\r\n                  [formGroup]=\"registerForm\">\r\n              <mat-form-field class=\"col-6 w-100 my-1\"\r\n                              appearance=\"outline\">\r\n                <mat-label>Nume</mat-label>\r\n                <input matInput\r\n                       #fn\r\n                       maxlength=\"20\"\r\n                       formControlName=\"firstName\"\r\n                       required>\r\n                <mat-hint align=\"end\">{{fn.value.length}} / 20</mat-hint>\r\n                <mat-error *ngIf=\"firstNameRF.invalid\">\r\n                  {{firstNameRF.errors | formControlErrorInterpretation}}\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-6 w-100 my-1\"\r\n                              appearance=\"outline\">\r\n                <mat-label>Prenume</mat-label>\r\n                <input matInput\r\n                       #ln\r\n                       maxlength=\"20\"\r\n                       formControlName=\"lastName\"\r\n                       required>\r\n                <mat-hint align=\"end\">{{ln.value.length}} / 20</mat-hint>\r\n                <mat-error *ngIf=\"lastNameRF.invalid\">\r\n                  {{lastNameRF.errors | formControlErrorInterpretation}}\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-12 w-100 my-1\"\r\n                              appearance=\"outline\">\r\n                <mat-label>Email</mat-label>\r\n                <input matInput\r\n                       placeholder=\"pat@example.com\"\r\n                       formControlName=\"email\"\r\n                       autocomplete=\"username\"\r\n                       required>\r\n                <mat-error *ngIf=\"emailRF.invalid\">\r\n                  {{emailRF.errors | formControlErrorInterpretation}}\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-12 w-100 my-1\"\r\n                              appearance=\"outline\">\r\n                <mat-label>Parola</mat-label>\r\n                <input matInput\r\n                       #p\r\n                       formControlName=\"password\"\r\n                       autocomplete=\"new-password\"\r\n                       [type]=\"hidePasswordRF ? 'password' : 'text'\"\r\n                       required>\r\n                <button mat-icon-button\r\n                        type=\"button\"\r\n                        matSuffix\r\n                        (click)=\"hidePasswordRF = !hidePasswordRF\"\r\n                        [attr.aria-label]=\"'Hide password'\"\r\n                        [attr.aria-pressed]=\"hidePasswordRF\">\r\n                  <span class=\"material-icons\">\r\n                    {{hidePasswordRF ? 'visibility_off' : 'visibility'}}\r\n                  </span>\r\n                </button>\r\n                <mat-hint align=\"end\">{{p.value.length}} / 8</mat-hint>\r\n                <mat-error *ngIf=\"passwordRF.invalid\">\r\n                  {{passwordRF.errors | formControlErrorInterpretation}}\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col-12 w-100 my-1\"\r\n                              appearance=\"outline\">\r\n                <mat-label>Confirmă Parola</mat-label>\r\n                <input matInput\r\n                       #cp\r\n                       formControlName=\"confirmPassword\"\r\n                       autocomplete=\"new-password\"\r\n                       [type]=\"hidePasswordRF ? 'password' : 'text'\"\r\n                       required>\r\n                <button mat-icon-button\r\n                        type=\"button\"\r\n                        matSuffix\r\n                        (click)=\"hidePasswordRF = !hidePasswordRF\"\r\n                        [attr.aria-label]=\"'Hide password'\"\r\n                        [attr.aria-pressed]=\"hidePasswordRF\">\r\n                  <span class=\"material-icons\">\r\n                    {{hidePasswordRF ? 'visibility_off' : 'visibility'}}\r\n                  </span>\r\n                </button>\r\n                <mat-hint align=\"end\">{{cp.value.length}} / 8</mat-hint>\r\n                <mat-error *ngIf=\"confirmPasswordRF.invalid\">\r\n                  {{confirmPasswordRF.errors | formControlErrorInterpretation}}\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <button mat-raised-button\r\n                      type=\"submit\"\r\n                      class=\"col-6\"\r\n                      color=\"primary\"\r\n                      [disabled]=\"registerForm.invalid\">Înregistrează-te</button>\r\n            </form>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label>\r\n          <span class=\"material-icons\">\r\n            restart_alt\r\n          </span>\r\n          RECUPREAZĂ PAROLA\r\n        </ng-template>\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        <mat-card class=\"login-card\"\r\n                  style=\"font-size: 1.2rem;\">\r\n          <mat-card-content>\r\n            <div class=\"row justify-content-center\">\r\n              <div class=\"col-6 text-center mb-4\">\r\n                Introduceți adresa de email folosită la înregistrare pentru a vă putea reseta parola de la contul\r\n                <span class=\"primary\">\r\n                  AZET D.T.\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <form class=\"row justify-content-center\"\r\n                  (ngSubmit)=\"onSubmitForgetPasswordForm()\"\r\n                  [formGroup]=\"forgetPasswordForm\">\r\n              <mat-form-field class=\"col-12 w-100 my-4\"\r\n                              appearance=\"outline\">\r\n                <mat-label>Email</mat-label>\r\n                <input matInput\r\n                       placeholder=\"pat@example.com\"\r\n                       formControlName=\"email\"\r\n                       autocomplete=\"username\"\r\n                       required>\r\n                <mat-error *ngIf=\"emailFPF.invalid\">\r\n                  {{emailFPF.errors | formControlErrorInterpretation}}\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <button mat-raised-button\r\n                      type=\"submit\"\r\n                      class=\"col-6\"\r\n                      color=\"primary\"\r\n                      [disabled]=\"forgetPasswordForm.invalid\">RECUPREAZĂ</button>\r\n            </form>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n  <div class=\"col-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <mat-toolbar class=\"mat-elevation-z6\"\r\n                     color=\"primary\">\r\n          <mat-toolbar-row>\r\n            <span>Beneficii</span>\r\n          </mat-toolbar-row>\r\n        </mat-toolbar>\r\n      </div>\r\n      <div class=\"col-12 mt-3\">\r\n        Dacă vă înregistrați pe platforma noastră\r\n        <span class=\"primary\">\r\n          AZET D.T.\r\n        </span>\r\n        aveți următoarele beneficii:\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <mat-list>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              restart_alt\r\n            </span>\r\n            <div mat-line>Cumpărături rapide</div>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              restart_alt\r\n            </span>\r\n            <div mat-line>Urmărire status comenzi</div>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              restart_alt\r\n            </span>\r\n            <div mat-line>Evidența comenzilor</div>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              restart_alt\r\n            </span>\r\n            <div mat-line>Factura online</div>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              restart_alt\r\n            </span>\r\n            <div mat-line>Garanție online</div>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              restart_alt\r\n            </span>\r\n            <div mat-line>Elimină birocrația</div>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              restart_alt\r\n            </span>\r\n            <div mat-line>Vezi cele mai bune oferte</div>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              restart_alt\r\n            </span>\r\n            <div mat-line>Siguranță</div>\r\n          </mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { combineLatest } from 'rxjs';\r\nimport { AuthenticationService } from 'src/app/shared/service/authentication.service';\r\nimport { patterns } from 'src/app/shared/utils/patterns';\r\nimport { customPatternValidator } from 'src/app/shared/utils/validation';\r\nimport { SubSink } from 'subsink';\r\n\r\n@Component({\r\n  selector: 'app-shop-authentication',\r\n  templateUrl: './shop-authentication.component.html',\r\n  styleUrls: ['./shop-authentication.component.scss']\r\n})\r\nexport class ShopAuthenticationComponent implements OnInit, OnDestroy {\r\n\r\n  private subs = new SubSink();\r\n\r\n  loginForm = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required, Validators.minLength(8)])\r\n  });\r\n\r\n  registerForm = new FormGroup({\r\n    firstName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.maxLength(20),\r\n      Validators.minLength(3),\r\n      customPatternValidator(patterns.onlyCharacters)\r\n    ]),\r\n    lastName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.maxLength(20),\r\n      Validators.minLength(3),\r\n      customPatternValidator(patterns.onlyCharacters)\r\n    ]),\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n    confirmPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n  });\r\n\r\n  forgetPasswordForm = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n  });\r\n\r\n  hidePasswordRF = true;\r\n  hidePasswordLF = true;\r\n  tabIndex = 0;\r\n\r\n  get emailLF(): FormControl {\r\n    return this.loginForm.get('email') as FormControl;\r\n  }\r\n\r\n  get passwordLF(): FormControl {\r\n    return this.loginForm.get('password') as FormControl;\r\n  }\r\n\r\n  get firstNameRF(): FormControl {\r\n    return this.registerForm.get('firstName') as FormControl;\r\n  }\r\n\r\n  get lastNameRF(): FormControl {\r\n    return this.registerForm.get('lastName') as FormControl;\r\n  }\r\n\r\n  get emailRF(): FormControl {\r\n    return this.registerForm.get('email') as FormControl;\r\n  }\r\n\r\n  get passwordRF(): FormControl {\r\n    return this.registerForm.get('password') as FormControl;\r\n  }\r\n\r\n  get confirmPasswordRF(): FormControl {\r\n    return this.registerForm.get('confirmPassword') as FormControl;\r\n  }\r\n\r\n  get emailFPF(): FormControl {\r\n    return this.forgetPasswordForm.get('email') as FormControl;\r\n  }\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subs.sink = combineLatest([\r\n      this.passwordRF.valueChanges,\r\n      this.confirmPasswordRF.valueChanges\r\n    ]).subscribe(([password, confirmPassword]) => {\r\n      if (password && (password.length >= 8) && confirmPassword && (confirmPassword.length >= 8) && (password != confirmPassword)) {\r\n        this.passwordRF.setErrors({ passwordMismatch: true });\r\n        this.confirmPasswordRF.setErrors({ passwordMismatch: true });\r\n      } else if (password && (password.length >= 8) && confirmPassword && (confirmPassword.length >= 8) && (password == confirmPassword)) {\r\n        this.passwordRF.setErrors(null);\r\n        this.confirmPasswordRF.setErrors(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmitLoginForm(): void {\r\n    const loginFormValues = this.loginForm.getRawValue();\r\n    this.authenticationService.login(loginFormValues);\r\n    console.log(loginFormValues, 'loginFormValues');\r\n  }\r\n\r\n  onSubmitRegisterForm(): void {\r\n    const registerFormValues = this.registerForm.getRawValue();\r\n    this.authenticationService.login(registerFormValues);\r\n    console.log(registerFormValues, 'registerFormValues');\r\n  }\r\n\r\n  onSubmitForgetPasswordForm(): void {\r\n    const forgetPasswordFormValues = this.forgetPasswordForm.getRawValue();\r\n    this.authenticationService.forgotPassword(forgetPasswordFormValues);\r\n    console.log(forgetPasswordFormValues, 'forgetPasswordFormValues');\r\n  }\r\n\r\n  changeTab(index: number): void {\r\n    this.loginForm.reset();\r\n    this.registerForm.reset();\r\n    this.forgetPasswordForm.reset();\r\n    this.tabIndex = index;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ShopAuthenticationComponent } from './shop-authentication.component';\r\n\r\nconst routes: Routes = [{ path: '', component: ShopAuthenticationComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ShopAuthenticationRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ShopAuthenticationRoutingModule } from './shop-authentication-routing.module';\r\nimport { ShopAuthenticationComponent } from './shop-authentication.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShopAuthenticationComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ShopAuthenticationRoutingModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\nexport class ShopAuthenticationModule {\r\n}\r\n"]}