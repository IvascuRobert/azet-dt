{"version":3,"file":"src_app_shop-cart_shop-cart_module_ts.js","mappings":"qZAAAA,uCAyHEA,iBACEA,8BACFA,kCAwBMA,qBACEA,mDACFA,+BADEA,2EAmBFA,qBACEA,mDACFA,+BADEA,4EAiBFA,qBACEA,mDACFA,+BADEA,8EA3DRA,gBAAqBA,oDAAgCA,QACrDA,uBACAA,gCAA2C,WAA3CA,CAA2C,sBAA3CA,CAA2C,eAK1BA,gBAAIA,QACfA,uBAUAA,wBAAwBA,+BAAkBA,QAC1CA,wBAAsBA,UAAuBA,QAC7CA,+BAGAA,oBAEEA,qBACFA,UAEFA,8BACqC,gBACxBA,oBAAOA,QAClBA,qBAQAA,wBAAwBA,qDAA8BA,QACtDA,+BAGAA,oBAEEA,oBACFA,UAEFA,8BACqC,gBACxBA,kBAAKA,QAChBA,wBAMAA,wBAAsBA,UAA0BA,QAChDA,+BAGAA,oBAEEA,sBACFA,cAINA,kCAAgC,gBAELA,8BAAOA,QAChCA,sBAIyC,cAErCA,mBACFA,QACAA,sBACFA,UAEFA,2BACAA,gBAAKA,mFAAuDA,cAAGA,oBAAOA,QAAKA,8CAC3EA,QACAA,gBAAKA,gGAAmEA,qDAjFhEA,0CAeoBA,0CACVA,sCAoBAA,uCAiBUA,2CACVA,yCAgBRA,sCAAyB,mCCxL9B,QA2CLC,YACSC,EACEC,GADFC,mBACEA,cAzCXA,sBAAmBC,SACnBD,kBAAgC,CAC9BE,aAAa,GAIfF,cAAW,EACXA,mBAAgBG,IAChBH,iBAAc,IAAII,KAAU,CAC1BC,KAAM,IAAID,KAAY,GAAI,CACxBA,cACAA,eAAqB,IACrBA,eAAqB,IACrB,OAAuBE,sBAEzBC,MAAO,IAAIH,KAAY,GAAI,CACzBA,eACA,OAAuBE,mBAEzBE,QAAS,IAAIJ,KAAY,GAAIA,iBAG/BJ,aAAe,CACbS,eAAe,EACfC,kBAAkB,GAoBlBV,KAAKW,OAAQ,UAjBXN,WACF,OAAOL,KAAKY,YAAYC,IAAI,QAG1BN,YACF,OAAOP,KAAKY,YAAYC,IAAI,SAG1BL,cACF,OAAOR,KAAKY,YAAYC,IAAI,WAW9BC,WAAQ,CAGRC,aAAajB,GAAgB,CAI7BkB,uBACoBhB,KAAKiB,OAAOC,KAAKlB,KAAKmB,qBAAsBnB,KAAKoB,cAEzDC,cAAcC,UAAUvB,IAChC,GAAIA,EAAQ,CACV,MAAMwB,EAAYvB,KAAKY,YAAYY,cACnCC,QAAQC,IAAIH,EAAW,aAEvBE,QAAQC,IAAI,kBAAkB3B,QAKpC4B,mBAAgB,wCAvELC,GAAiBhC,iDAAjBgC,EAAiBC,4qCDjB9BjC,wCAuHAA,uCAOAA,kEA9HMA,iCAAoB,0LEI1B,MAAMkC,EAAiB,CACnB,CAAEC,KAAM,GAAIC,UAAWJ,IAQpB,+CAAMK,4DAJA,CAACC,cAAsBJ,IACtBI,QCOP,+CAAMC,4DAVA,CACLF,EACAG,IACAhC","names":["t","constructor","e","r","this","x","hasBackdrop","T","a","name","h","phone","message","showAddButton","showRemoveButton","cart$","contactForm","get","ngOnInit","removeToCart","openCheckoutProducts","dialog","open","cartCheckoutTemplate","configDialog","afterClosed","subscribe","m","getRawValue","console","log","checkoutProducts","u","selectors","Q","path","component","i","g","s","v"],"sourceRoot":"webpack:///","sources":["./src/app/shop-cart/shop-cart.component.html","./src/app/shop-cart/shop-cart.component.ts","./src/app/shop-cart/shop-cart-routing.module.ts","./src/app/shop-cart/shop-cart.module.ts"],"sourcesContent":["<div *ngIf=\"cart$ | async as cart; else loading\"\r\n     class=\"row mt-5 p-5\">\r\n  <!-- <div *ngIf=\"cart.products.length === 0\"\r\n       class=\"col-12 text-center\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-12\">\r\n        <h1 style=\"font-size: 2rem;\">\r\n          Ooops!\r\n        </h1>\r\n        <span class=\"material-icons\">\r\n          horizontal_rule\r\n        </span>\r\n        <h1 style=\"font-size: 2rem;\">\r\n          Nu ai niciun produs în coș\r\n        </h1>\r\n        <span class=\"material-icons\">\r\n          horizontal_rule\r\n        </span>\r\n        <h3>\r\n          <span class=\"primary\">\r\n            AZET D.T.\r\n          </span>\r\n          vă recomandă să mergeți în fereastra de Anvelope\r\n        </h3>\r\n      </div>\r\n      <div class=\"col-10 my-3\">\r\n        <mat-divider></mat-divider>\r\n      </div>\r\n      <div class=\"col-12 text-center\">\r\n        <button mat-raised-button\r\n                color=\"primary\"\r\n                routerLink=\"/products\">\r\n          <span class=\"material-icons-two-tone\">\r\n            support\r\n          </span>\r\n          Anvelope\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"cart.products.length > 0\"\r\n       class=\"col-8\">\r\n    <app-products-card [products]=\"cart.products\"\r\n                       [viewMode]=\"templateViewMode\"\r\n                       (clickRemoveToCart)=\"removeToCart($event)\"\r\n                       [options]=\"options\"></app-products-card>\r\n  </div>\r\n  <div *ngIf=\"cart.products.length > 0\"\r\n       class=\"col-4\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-12 mb-4\">\r\n        <mat-toolbar class=\"mat-elevation-z6\"\r\n                     color=\"primary\">\r\n          <mat-toolbar-row>\r\n            <span>SUMAR COMANDĂ</span>\r\n          </mat-toolbar-row>\r\n        </mat-toolbar>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <h3>\r\n          <span class=\"primary\">Total anvelope:</span>\r\n        </h3>\r\n      </div>\r\n      <div class=\"col-6 text-right\">\r\n        <h3>\r\n          <span>{{cart.totalProducts}}</span>\r\n        </h3>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <h3>\r\n          <span class=\"primary\">Total plată: </span>\r\n        </h3>\r\n      </div>\r\n      <div class=\"col-6 text-right\">\r\n        <h3>\r\n          <span>{{cart.totalPrice}} Lei</span>\r\n        </h3>\r\n      </div>\r\n      <div class=\"col-10 my-3\">\r\n        <mat-divider></mat-divider>\r\n      </div>\r\n      <div class=\"col-12 text-center\">\r\n        <button mat-raised-button\r\n                class=\"w-100\"\r\n                color=\"primary\"\r\n                (click)=\"openCheckoutProducts()\">\r\n          <span class=\"material-icons-two-tone\">\r\n            store\r\n          </span>\r\n          FINALIZEAZĂ COMANDA\r\n        </button>\r\n      </div>\r\n      <div class=\"col-12 my-5\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-4 align-self-center\">\r\n            <mat-divider></mat-divider>\r\n          </div>\r\n          <div class=\"col-4 align-self-center text-center primary\">\r\n            <span style=\"font-size: 1.6rem;\">SAU</span>\r\n          </div>\r\n          <div class=\"col-4 align-self-center\">\r\n            <mat-divider></mat-divider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 text-center\">\r\n        <button mat-stroked-button\r\n                class=\"w-100\"\r\n                color=\"primary\"\r\n                routerLink=\"/products\">\r\n          <span class=\"material-icons-two-tone\">\r\n            support\r\n          </span>\r\n          Continuă cumpăturile\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n</div>\r\n<ng-template #loading\r\n             class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #cartCheckoutTemplate>\r\n  <h2 mat-dialog-title>Formular de înregistrare comandă</h2>\r\n  <mat-divider></mat-divider>\r\n  <mat-dialog-content class=\"mat-typography\">\r\n    <form class=\"row justify-content-center\"\r\n          [formGroup]=\"contactForm\">\r\n      <mat-form-field class=\"col-12 w-100 my-3\"\r\n                      appearance=\"outline\">\r\n        <mat-label>Nume</mat-label>\r\n        <input id=\"name\"\r\n               #n\r\n               name=\"name\"\r\n               type=\"text\"\r\n               matInput\r\n               maxlength=\"20\"\r\n               formControlName=\"name\"\r\n               placeholder=\"Nume\"\r\n               autocomplete=\"username\"\r\n               required>\r\n        <mat-hint align=\"start\">Ex. Popescu Adrian</mat-hint>\r\n        <mat-hint align=\"end\">{{n.value.length}} / 20</mat-hint>\r\n        <mat-error *ngIf=\"name.invalid\">\r\n          {{name.errors | formControlErrorInterpretation}}\r\n        </mat-error>\r\n        <span matSuffix\r\n              class=\"material-icons\">\r\n          person\r\n        </span>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-12 w-100 my-3\"\r\n                      appearance=\"outline\">\r\n        <mat-label>Telefon</mat-label>\r\n        <input id=\"phone\"\r\n               name=\"phone\"\r\n               type=\"tel\"\r\n               aria-label=\"Telefon\"\r\n               matInput\r\n               formControlName=\"phone\"\r\n               placeholder=\"555-555-1234\"\r\n               required>\r\n        <mat-hint align=\"start\">Introduceți numărul de telefon</mat-hint>\r\n        <mat-error *ngIf=\"phone.invalid\">\r\n          {{phone.errors | formControlErrorInterpretation}}\r\n        </mat-error>\r\n        <span matSuffix\r\n              class=\"material-icons\">\r\n          phone\r\n        </span>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-12 w-100 my-3\"\r\n                      appearance=\"outline\">\r\n        <mat-label>Mesaj</mat-label>\r\n        <input matInput\r\n               #msg\r\n               formControlName=\"message\"\r\n               maxlength=\"100\"\r\n               placeholder=\"Ex. Doresc să comand...\"\r\n               required>\r\n        <mat-hint align=\"end\">{{msg.value.length}} / 100</mat-hint>\r\n        <mat-error *ngIf=\"message.invalid\">\r\n          {{message.errors | formControlErrorInterpretation}}\r\n        </mat-error>\r\n        <span matSuffix\r\n              class=\"material-icons\">\r\n          textsms\r\n        </span>\r\n      </mat-form-field>\r\n    </form>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button\r\n            mat-dialog-close>Renunță</button>\r\n    <button mat-stroked-button\r\n            type=\"button\"\r\n            color=\"primary\"\r\n            [mat-dialog-close]=\"true\"\r\n            [disabled]=\"contactForm.invalid\">\r\n      <span class=\"material-icons\">\r\n        send\r\n      </span>\r\n      Trimite\r\n    </button>\r\n  </mat-dialog-actions>\r\n  <mat-divider class=\"mt-4\"></mat-divider>\r\n  <div>*Completează formularul de mai sus și apasă pe butonul <i>Trimite</i> pentru a înregistra comanda.\r\n  </div>\r\n  <div>*După ce comanda a fost înregistrată te vom suna noi în scurt timp.</div>\r\n</ng-template>","import { ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Product } from 'src/app/shared/class/base-cart-item';\r\nimport { State } from 'src/app/shared/enum/state';\r\nimport { ViewMode } from 'src/app/shared/enum/view-mode';\r\nimport { patterns } from 'src/app/shared/utils/patterns';\r\nimport { customPatternValidator } from 'src/app/shared/utils/validation';\r\nimport { CartService } from '../shared/service/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-shop-cart',\r\n  templateUrl: './shop-cart.component.html',\r\n  styleUrls: ['./shop-cart.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ShopCartComponent implements OnInit {\r\n\r\n  @ViewChild('cartCheckoutTemplate') cartCheckoutTemplate!: TemplateRef<any>;\r\n\r\n  templateViewMode = ViewMode.LIST;\r\n  configDialog: MatDialogConfig = {\r\n    hasBackdrop: true\r\n  };\r\n\r\n  cart$: Observable<Product>;\r\n  tabIndex = 0;\r\n  stateTemplate = State;\r\n  contactForm = new FormGroup({\r\n    name: new FormControl('', [\r\n      Validators.required,\r\n      Validators.maxLength(20),\r\n      Validators.minLength(3),\r\n      customPatternValidator(patterns.onlyCharacters)\r\n    ]),\r\n    phone: new FormControl('', [\r\n      Validators.required,\r\n      customPatternValidator(patterns.phoneNumber)\r\n    ]),\r\n    message: new FormControl('', Validators.required),\r\n  });\r\n\r\n  options: any = {\r\n    showAddButton: false,\r\n    showRemoveButton: true\r\n  };\r\n\r\n  get name(): FormControl {\r\n    return this.contactForm.get('name') as FormControl;\r\n  }\r\n\r\n  get phone(): FormControl {\r\n    return this.contactForm.get('phone') as FormControl;\r\n  }\r\n\r\n  get message(): FormControl {\r\n    return this.contactForm.get('message') as FormControl;\r\n  }\r\n\r\n  constructor(\r\n    public cartService: CartService,\r\n    readonly dialog: MatDialog\r\n  ) {\r\n    // this.cart$ = this.cartService.cartProducts$;\r\n    this.cart$ = of();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  removeToCart(product: Product): void {\r\n    // this.cartService.removeCartProduct(product);\r\n  }\r\n\r\n  openCheckoutProducts(): void {\r\n    const dialogRef = this.dialog.open(this.cartCheckoutTemplate, this.configDialog);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        const formValue = this.contactForm.getRawValue();\r\n        console.log(formValue, 'formValue');\r\n\r\n        console.log(`Dialog result: ${result}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  checkoutProducts(): void {\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ShopCartComponent } from './shop-cart.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ShopCartComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ShopCartRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ShopCartRoutingModule } from './shop-cart-routing.module';\r\nimport { ShopCartComponent } from './shop-cart.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        ShopCartRoutingModule,\r\n        SharedModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [\r\n        ShopCartComponent\r\n    ]\r\n})\r\n\r\nexport class ShopCartModule { }\r\n"]}