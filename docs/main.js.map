{"version":3,"file":"main.js","mappings":"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","names":["constructor","storeValue","e","s","window","localStorage","i","getStorageValueByKey","clearStorageByKey","removeItem","t","factory","this","Date","l","name","n","email","phone","reason","date","time","d","m","getDay","controlName","scheduleInServiceForm","get","controlEmail","controlPhone","controlDate","controlTime","controlReason","ngOnInit","minDate","setDate","getDate","maxDate","setValue","onSubmitScheduleInServiceForm","getRawValue","console","log","u","selectors","currentDateIsInProgramRange","checkIfIsOpened","r","setHours","trackByValue","value","C","transform","required","minlength","actualLength","requiredLength","maxlength","passwordMismatch","invalidMsg","matDatepickerMin","actual","min","customMessage","pure","login","http","register","forgotPassword","T","A","imports","Z","L","M","f","I","S","F","_","O","E","p","x","q","R","N","y","P","phoneNumber","regExp","msg","onlyNumbers","onlyCharacters","workDays","label","icon","timeRange","weekend","match","hour","a","logError","error","preload","g","data","logger","path","oxw","search","toggleSearchOverlay","isSerachOverlayOpened","isMenuOverlayOpened","toggleMenuOverlay","clickMenuIcon","openSideNavDrawer","emit","openScheduleInService","dialog","open","width","disableClose","openSchedule","MAs","toggle","component","loadChildren","o","then","c","ShopHomeModule","Promise","ShopProductsModule","ShopContactModule","ShopCartModule","ShopAuthenticationModule","pathMatch","redirectTo","preloadingStrategy","relativeLinkResolution","scrollPositionRestoration","anchorScrolling","canActivate","authenticationService","isAuthenticated","router","navigate","J","Error","super","B","K","provide","useFactory","b","W","bootstrap","k","bootstrapModule","providers","useValue","catch"],"sourceRoot":"webpack:///","sources":["./src/app/core/services/local-storage.service.ts","./src/app/shared/components/dialog-content-schedule-in-service/dialog-content-schedule-in-service.component.html","./src/app/shared/components/dialog-content-schedule-in-service/dialog-content-schedule-in-service.component.ts","./src/app/shared/components/dialog-content-schedule/dialog-content-schedule.component.html","./src/app/shared/components/dialog-content-schedule/dialog-content-schedule.component.ts","./src/app/shared/pipes/form-control-error-interpretation.pipe.ts","./src/app/shared/service/authentication.service.ts","./src/app/shared/module/bootstrap.module.ts","./src/app/shared/module/material.module.ts","./src/app/shared/shared.module.ts","./src/app/shared/utils/patterns.ts","./src/app/shared/utils/utils.ts","./src/app/shared/utils/validation.ts","./src/environments/environment.ts","./src/app/core/services/logger.service.ts","./src/app/core/strategies/preload-modules.strategy.ts","./src/app/shared/components/logo-icon/logo-icon.component.ts","./src/app/shared/components/logo-icon/logo-icon.component.html","./src/app/shared/components/header/header.component.html","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/footer/footer.component.ts","./src/app/shared/components/footer/footer.component.html","./src/app/shared/components/layout-shop/layout-shop.component.ts","./src/app/shared/components/layout-shop/layout-shop.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/guards/can-activate.guard.ts","./src/app/core/core.module.ts","./src/app/core/ensure-module-loaded-once.guard.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { LocalStorageKey } from 'src/app/shared/enum/local-storage-key';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n\r\n  constructor() { }\r\n\r\n  storeValue(value: any, key: LocalStorageKey): void {\r\n    try {\r\n      window.localStorage[key] = value;\r\n    } catch { }\r\n  }\r\n\r\n  getStorageValueByKey(key: LocalStorageKey): any {\r\n    try {\r\n      return window.localStorage[key] || null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  clearStorageByKey(key: LocalStorageKey): void {\r\n    try {\r\n      window.localStorage.removeItem(key);\r\n    } catch { }\r\n  }\r\n}\r\n","<h1 mat-dialog-title\r\n    class=\"d-flex align-items-center\">\r\n  <span class=\"material-icons text-warning mr-3\">tire_repair</span>\r\n  Programează în service\r\n</h1>\r\n<div mat-dialog-content>\r\n  <form class=\"row align-items-center justify-content-center\"\r\n        (ngSubmit)=\"onSubmitScheduleInServiceForm()\"\r\n        [formGroup]=\"scheduleInServiceForm\">\r\n    <mat-form-field class=\"col-12 mb-1\"\r\n                    appearance=\"outline\">\r\n      <mat-label>Nume</mat-label>\r\n      <input id=\"name\"\r\n             #n\r\n             name=\"name\"\r\n             type=\"text\"\r\n             matInput\r\n             maxlength=\"20\"\r\n             formControlName=\"name\"\r\n             placeholder=\"Nume\"\r\n             autocomplete=\"username\"\r\n             required>\r\n      <mat-hint align=\"start\">Ex. Popescu Adrian</mat-hint>\r\n      <mat-hint align=\"end\">{{n.value.length}} / 20</mat-hint>\r\n      <mat-error *ngIf=\"controlName.invalid\">\r\n        {{controlName.errors | formControlErrorInterpretation}}\r\n      </mat-error>\r\n      <span matSuffix\r\n            class=\"material-icons\">\r\n        person\r\n      </span>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"col-12 w-100 my-3\"\r\n                    appearance=\"outline\">\r\n      <span matPrefix>+40 &nbsp;</span>\r\n      <mat-label>Telefon</mat-label>\r\n      <input id=\"phone\"\r\n             name=\"phone\"\r\n             type=\"tel\"\r\n             aria-label=\"Telefon\"\r\n             matInput\r\n             formControlName=\"phone\"\r\n             placeholder=\"555-555-1234\"\r\n             required>\r\n      <mat-hint align=\"start\">Introduceți numărul de telefon</mat-hint>\r\n      <mat-error *ngIf=\"controlPhone.invalid\">\r\n        {{controlPhone.errors | formControlErrorInterpretation}}\r\n      </mat-error>\r\n      <span matSuffix\r\n            class=\"material-icons\">\r\n        phone\r\n      </span>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"col-12 mb-1\"\r\n                    appearance=\"outline\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput\r\n             placeholder=\"pat@example.com\"\r\n             formControlName=\"email\"\r\n             autocomplete=\"username\"\r\n             required>\r\n      <mat-error *ngIf=\"controlEmail.invalid\">\r\n        {{controlEmail.errors | formControlErrorInterpretation}}\r\n      </mat-error>\r\n      <span matSuffix\r\n            class=\"material-icons\">\r\n        mail\r\n      </span>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"col-12 mb-1\"\r\n                    appearance=\"outline\">\r\n      <mat-label>Motiv</mat-label>\r\n      <input matInput\r\n             #reason\r\n             formControlName=\"reason\"\r\n             maxlength=\"100\"\r\n             placeholder=\"Ex. Schimbare de cauciuc...\"\r\n             required>\r\n      <mat-hint align=\"end\">{{reason.value.length}} / 100</mat-hint>\r\n      <mat-error *ngIf=\"controlReason.invalid\">\r\n        {{controlReason.errors | formControlErrorInterpretation}}\r\n      </mat-error>\r\n      <span matSuffix\r\n            class=\"material-icons\">\r\n        textsms\r\n      </span>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"col-12 mb-1\"\r\n                    appearance=\"outline\">\r\n      <mat-label>Data programării</mat-label>\r\n      <input matInput\r\n             formControlName=\"date\"\r\n             [matDatepicker]=\"picker\"\r\n             [matDatepickerFilter]=\"filterDate\"\r\n             [max]=\"maxDate\"\r\n             [min]=\"minDate\"\r\n             matTooltip=\"Data programării trebuie să fie cu o zi înainte de ziua curentă.\"\r\n             required>\r\n      <mat-datepicker-toggle matSuffix\r\n                             [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n      <mat-error *ngIf=\"controlDate.invalid\">\r\n        {{controlDate.errors | formControlErrorInterpretation}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-card class=\"col-12 text-center m-0 p-0\">\r\n      <mat-label class=\"align-items-center\">\r\n        Ora programării *\r\n      </mat-label>\r\n      <ngb-timepicker formControlName=\"time\"\r\n                      [hourStep]=\"1\"\r\n                      [minuteStep]=\"15\"\r\n                      required></ngb-timepicker>\r\n      <mat-error *ngIf=\"controlTime.valid\"\r\n                 class=\"text-success\"\r\n                 style=\"font-size: 75%;\">\r\n        Ora este validă.\r\n      </mat-error>\r\n      <mat-error *ngIf=\"controlTime.invalid\"\r\n                 style=\"font-size: 75%;\">\r\n        {{controlTime.errors | formControlErrorInterpretation}}\r\n      </mat-error>\r\n    </mat-card>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions\r\n     align=\"end\">\r\n  <button mat-button\r\n          mat-dialog-close>Închide</button>\r\n  <button mat-raised-button\r\n          color=\"accent\"\r\n          type=\"submit\"\r\n          mat-dialog-data>Programează</button>\r\n</div>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { customPatternValidator, customTimePickerValidatorInterval } from 'src/app/shared/utils/validation';\r\nimport { patterns } from '../../utils/patterns';\r\n\r\n@Component({\r\n  selector: 'app-dialog-content-schedule-in-service',\r\n  templateUrl: './dialog-content-schedule-in-service.component.html',\r\n  styleUrls: ['./dialog-content-schedule-in-service.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DialogContentScheduleInServiceComponent implements OnInit {\r\n\r\n  minDate: Date = new Date();\r\n  maxDate: Date = new Date();\r\n\r\n  scheduleInServiceForm: FormGroup = new FormGroup({\r\n    name: new FormControl('', [\r\n      Validators.required,\r\n      Validators.maxLength(20),\r\n      Validators.minLength(3),\r\n      customPatternValidator(patterns.onlyCharacters)\r\n    ]),\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    phone: new FormControl('', [\r\n      Validators.required,\r\n      customPatternValidator(patterns.phoneNumber)\r\n    ]),\r\n    reason: new FormControl('', Validators.required),\r\n    date: new FormControl(null, Validators.required),\r\n    time: new FormControl(null, [\r\n      Validators.required,\r\n      customTimePickerValidatorInterval()\r\n    ])\r\n  });\r\n\r\n  get controlName(): FormControl {\r\n    return this.scheduleInServiceForm.get('name') as FormControl;\r\n  }\r\n\r\n  get controlEmail(): FormControl {\r\n    return this.scheduleInServiceForm.get('email') as FormControl;\r\n  }\r\n\r\n  get controlPhone(): FormControl {\r\n    return this.scheduleInServiceForm.get('phone') as FormControl;\r\n  }\r\n\r\n  get controlDate(): FormControl {\r\n    return this.scheduleInServiceForm.get('date') as FormControl;\r\n  }\r\n\r\n  get controlTime(): FormControl {\r\n    return this.scheduleInServiceForm.get('time') as FormControl;\r\n  }\r\n\r\n  get controlReason(): FormControl {\r\n    return this.scheduleInServiceForm.get('reason') as FormControl;\r\n  }\r\n\r\n  filterDate = (d: Date | null): boolean => {\r\n    const day = (d || new Date()).getDay();\r\n    // Prevent Saturday and Sunday from being selected.\r\n    return day !== 0 && day !== 6;\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    // set minDate\r\n    this.minDate.setDate(this.minDate.getDate() + 1);\r\n\r\n    // set maxDate\r\n    this.maxDate.setDate(this.minDate.getDate() + 21);\r\n    this.controlDate.setValue(this.minDate);\r\n  }\r\n\r\n  onSubmitScheduleInServiceForm(): void {\r\n    const scheduleInServiceFormValues = this.scheduleInServiceForm.getRawValue();\r\n\r\n    console.log(scheduleInServiceFormValues, 'scheduleInServiceFormValues');\r\n  }\r\n}\r\n","<h1 mat-dialog-title class=\"d-flex align-items-center\">\r\n  <span class=\"material-icons text-danger mr-3\">schedule</span>\r\n  Program de lucru\r\n</h1>\r\n<mat-dialog-content mat-dialog-content>\r\n  <mat-list dense>\r\n    <div mat-subheader>Data exactă</div>\r\n    <mat-list-item>\r\n      <span mat-list-icon class=\"material-icons-round text-info\">timer</span>\r\n      <div *ngIf=\"(realTimeClock$ | async) as clock else loadingClock\" mat-line>{{ clock | date: 'd.M.yy, H:mm:ss' }}\r\n      </div>\r\n      <ng-template #loadingClock>\r\n        <mat-progress-bar color=\"accent\" mode=\"indeterminate\"></mat-progress-bar>\r\n      </ng-template>\r\n    </mat-list-item>\r\n    <mat-divider></mat-divider>\r\n    <div mat-subheader>Zile lucrătoare</div>\r\n    <mat-list-item *ngFor=\"let day of daysOfWeeks.workDays;trackBy: trackByValue\"\r\n      [ngClass]=\"{'border border-success rounded': (day.value === dayNow)}\">\r\n      <span mat-list-icon [ngClass]=\"{'text-success': ((day.value === dayNow) && currentDateIsInProgramRange),\r\n                        'text-secondary': !((day.value === dayNow) && currentDateIsInProgramRange)}\"\r\n        class=\"material-icons-round text-success\">{{day.icon}}</span>\r\n      <div mat-line class=\"d-flex justify-content-between\">\r\n        <span>{{day.label}}</span>\r\n        <span>{{day.timeRange}}</span>\r\n      </div>\r\n      <div mat-line *ngIf=\"(day.value === dayNow)\">\r\n        <span *ngIf=\"currentDateIsInProgramRange else closed\" class=\"text-success\">Deschis</span>\r\n        <ng-template #closed>Închis</ng-template>\r\n      </div>\r\n    </mat-list-item>\r\n    <mat-divider></mat-divider>\r\n    <div mat-subheader>Zile libere</div>\r\n    <mat-list-item *ngFor=\"let weekendsDay of daysOfWeeks.weekend;trackBy: trackByValue\">\r\n      <span mat-list-icon class=\"material-icons-round text-danger\">{{weekendsDay.icon}}</span>\r\n      <div mat-line>{{weekendsDay.label}}</div>\r\n      <div mat-line>{{weekendsDay.timeRange}}</div>\r\n    </mat-list-item>\r\n  </mat-list>\r\n</mat-dialog-content>\r\n<mat-dialog-action mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Închide</button>\r\n</mat-dialog-action>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { DaysOfWeek } from 'src/app/shared/interface/days-of-week';\r\nimport { daysOfWeeks } from 'src/app/shared/utils/utils';\r\n\r\n@Component({\r\n  selector: 'app-dialog-content-schedule',\r\n  templateUrl: './dialog-content-schedule.component.html',\r\n  styleUrls: ['./dialog-content-schedule.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DialogContentScheduleComponent implements OnInit {\r\n\r\n  daysOfWeeks: DaysOfWeek = daysOfWeeks\r\n  realTimeClock$: Observable<Date> = of(new Date());\r\n  dayNow = new Date().getDay();\r\n  currentDateIsInProgramRange: boolean = false;\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentDateIsInProgramRange = this.checkIfIsOpened();\r\n  }\r\n\r\n  checkIfIsOpened(): boolean {\r\n    const now = new Date();\r\n    const from = new Date();\r\n    const to = new Date();\r\n\r\n    from.setHours(8, 0, 0, 0);\r\n    to.setHours(17, 0, 0, 0);\r\n\r\n    if ((now.getDay() === 0) || (now.getDay() === 6)) { // weekends\r\n      return false;\r\n    }\r\n\r\n    if ((now < from) || (now > to)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  trackByValue(index: number, item: any): string {\r\n    return item.value;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValidationErrors } from '@angular/forms';\r\nimport memo from 'memo-decorator';\r\n\r\n@Pipe({ name: 'formControlErrorInterpretation' })\r\nexport class FormControlErrorInterpretationPipe implements PipeTransform {\r\n    @memo()\r\n    transform(error: ValidationErrors | null): string {\r\n\r\n        if (error && error.required) {\r\n            return 'Câmpul este obligatoriu.';\r\n        } else if (error && error.email) {\r\n            return 'Email-ul nu este valid.';\r\n        } else if (error && error.minlength) {\r\n            return 'Ați completat ' + error.minlength.actualLength + ' din ' + error.minlength.requiredLength + ' caractere.';\r\n        } else if (error && error.maxlength) {\r\n            return 'Ați depășit numărul de caractere cu ' + error.maxlength.actualLength + ' din ' + error.maxlength.requiredLength + '.';\r\n        } else if (error && error.passwordMismatch) {\r\n            return 'Parolele nu sunt identice.';\r\n        } else if (error && error.invalidMsg) {\r\n            return error.invalidMsg;\r\n        } else if (error && error.matDatepickerMin) {\r\n            if (error.matDatepickerMin.actual && error.matDatepickerMin.min) {\r\n                return 'Data introdusă este în trecut.';\r\n            }\r\n\r\n            return 'Data este invalidă.'\r\n        } else if (error && error.customMessage) {\r\n            return error.customMessage;\r\n        } else {\r\n            return 'Eroare.'\r\n        }\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../interface/user-login';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  isAuthenticated = false;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(params: any): Observable<User> {\r\n    return this.http.get<User>(params);\r\n  }\r\n\r\n  register(params: any): Observable<User> {\r\n    return this.http.get<User>(params);\r\n  }\r\n\r\n  forgotPassword(params: any): Observable<User> {\r\n    return this.http.get<User>(params);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgbProgressbarModule, NgbTimepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n    exports: [\r\n        NgbProgressbarModule,\r\n        NgbTimepickerModule\r\n    ]\r\n})\r\nexport class BootstrapModule { }\r\n","import { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n    exports: [\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatDividerModule,\r\n        MatTooltipModule,\r\n        MatToolbarModule,\r\n        MatChipsModule,\r\n        MatRippleModule,\r\n        MatProgressBarModule,\r\n        MatListModule,\r\n        ClipboardModule,\r\n        MatDialogModule,\r\n        MatFormFieldModule,\r\n        MatDatepickerModule,\r\n        MatSidenavModule,\r\n        MatSelectModule,\r\n        MatTabsModule,\r\n        MatButtonToggleModule,\r\n        MatTreeModule,\r\n        MatCheckboxModule,\r\n        MatInputModule,\r\n        OverlayModule\r\n    ],\r\n    providers: [\r\n        MatDatepickerModule,\r\n        MatSnackBar\r\n    ]\r\n})\r\nexport class MaterialModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ContactListComponent } from './components/contact-list/contact-list.component';\r\nimport { CopyLinkComponent } from './components/copy-link/copy-link.component';\r\nimport { DialogContentScheduleInServiceComponent } from './components/dialog-content-schedule-in-service/dialog-content-schedule-in-service.component';\r\nimport { DialogContentScheduleComponent } from './components/dialog-content-schedule/dialog-content-schedule.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { LayoutAdminComponent } from './components/layout-admin/layout-admin.component';\r\nimport { LayoutShopComponent } from './components/layout-shop/layout-shop.component';\r\nimport { LogoIconComponent } from './components/logo-icon/logo-icon.component';\r\nimport { MessageComponent } from './components/message/message.component';\r\nimport { ProductStateComponent } from './components/product-state/product-state.component';\r\nimport { ProductsCardComponent } from './components/products-card/products-card.component';\r\nimport { SocialMediaIconsComponent } from './components/social-media-icons/social-media-icons.component';\r\nimport { BootstrapModule } from './module/bootstrap.module';\r\nimport { MaterialModule } from './module/material.module';\r\nimport { AzetDTCurrencyPipe } from './pipes/currency.pipe';\r\nimport { FormControlErrorInterpretationPipe } from './pipes/form-control-error-interpretation.pipe';\r\nimport { TrimPipe } from './pipes/trim.pipe';\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        MaterialModule,\r\n        BootstrapModule\r\n    ],\r\n    declarations: [\r\n        MessageComponent,\r\n        TrimPipe,\r\n        AzetDTCurrencyPipe,\r\n        FormControlErrorInterpretationPipe,\r\n        ProductsCardComponent,\r\n        SocialMediaIconsComponent,\r\n        LogoIconComponent,\r\n        ProductStateComponent,\r\n        ContactListComponent,\r\n        CopyLinkComponent,\r\n        DialogContentScheduleComponent,\r\n        DialogContentScheduleInServiceComponent,\r\n        LayoutShopComponent,\r\n        FooterComponent,\r\n        LayoutAdminComponent,\r\n        HeaderComponent\r\n    ],\r\n    exports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        BootstrapModule,\r\n        MessageComponent,\r\n        TrimPipe,\r\n        AzetDTCurrencyPipe,\r\n        FormControlErrorInterpretationPipe,\r\n        ProductsCardComponent,\r\n        SocialMediaIconsComponent,\r\n        LogoIconComponent,\r\n        ProductStateComponent,\r\n        ContactListComponent,\r\n        CopyLinkComponent,\r\n        DialogContentScheduleComponent,\r\n        DialogContentScheduleInServiceComponent,\r\n        LayoutShopComponent,\r\n        FooterComponent,\r\n        LayoutAdminComponent,\r\n        HeaderComponent\r\n    ]\r\n})\r\nexport class SharedModule { }\r\n","export const patterns = {\r\n    phoneNumber: {\r\n        regExp: /^\\+?[0-9]*$/,\r\n        msg: 'Numărul de telefonu nu este valid.'\r\n    },\r\n    onlyNumbers: {\r\n        regExp: /^[0-9]\\d*$/,\r\n        msg: 'Trebuie să introduceți doar numere.'\r\n    },\r\n    onlyCharacters: {\r\n        regExp: /^[a-zA-Z ]*$/,\r\n        msg: 'Trebuie să introduceți doar caractere.'\r\n    }\r\n};\r\n","import { DaysOfWeek } from \"../interface/days-of-week\";\r\nimport { DropdownValue } from \"../interface/dropdown-value\";\r\n\r\n\r\nexport const azetDTGoogleMapsLocation = `https://www.google.com/maps/place/Azet+DT+Resapare+\r\n                                         Anvelope+Camion+SRL/@45.6575573,25.641716,17z/data=!3m1!4b1!4m12!1m6!3m5!1s0x40b35c6b2de4023d\r\n                                         :0x1b5da9eebf44f902!2sAzet+DT+Resapare+Anvelope+Camion+SRL!8m2!3d45.6575587!4d25.6439095!3m4!\r\n                                         1s0x40b35c6b2de4023d:0x1b5da9eebf44f902!8m2!3d45.6575587!4d25.6439095`;\r\n\r\nexport const daysOfWeeks: DaysOfWeek = {\r\n    workDays: [\r\n        {\r\n            value: 1,\r\n            label: 'Luni',\r\n            icon: 'check_circle_outline',\r\n            timeRange: '08 – 17'\r\n        },\r\n        {\r\n            value: 2,\r\n            label: 'Marți',\r\n            icon: 'check_circle_outline',\r\n            timeRange: '08 – 17'\r\n        },\r\n        {\r\n            value: 3,\r\n            label: 'Miercuri',\r\n            icon: 'check_circle_outline',\r\n            timeRange: '08 – 17'\r\n        },\r\n        {\r\n            value: 4,\r\n            label: 'Joi',\r\n            icon: 'check_circle_outline',\r\n            timeRange: '08 – 17'\r\n        },\r\n        {\r\n            value: 5,\r\n            label: 'Vineri',\r\n            icon: 'check_circle_outline',\r\n            timeRange: '08 – 17'\r\n        },\r\n    ],\r\n    weekend: [\r\n        {\r\n            value: 6,\r\n            label: 'Sâmbătă',\r\n            icon: 'highlight_off',\r\n            timeRange: 'Închis'\r\n        },\r\n        {\r\n            value: 0,\r\n            label: 'Duminică',\r\n            icon: 'highlight_off',\r\n            timeRange: 'Închis'\r\n        }\r\n    ]\r\n};\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { Patterns } from 'src/app/shared/interface/patterns';\r\n\r\n\r\nexport function customPatternValidator(config: Patterns): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n        let urlRegEx: RegExp = config.regExp;\r\n\r\n        if (control.value && !control.value.match(urlRegEx)) {\r\n            return {\r\n                invalidMsg: config.msg\r\n            };\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\nexport function customTimePickerValidatorInterval(): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n        const value = control.value;\r\n\r\n        if (!value) {\r\n            return null;\r\n        }\r\n        if (value.hour < 8) {\r\n            return { customMessage: 'Ne pare rău dar este prea devreme.' };\r\n        }\r\n        if (value.hour > 17) {\r\n            return { customMessage: 'Ne pare rău dar este prea târziu.' };\r\n        }\r\n\r\n        return null;\r\n    };\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class LoggerService {\r\n\r\n    constructor() { }\r\n\r\n    log(msg: string): void {\r\n        if (!environment.production) {\r\n            console.log(msg);\r\n        }\r\n        else {\r\n            // AppInsights\r\n        }\r\n\r\n    }\r\n\r\n    logError(msg: string): void {\r\n        if (!environment.production) {\r\n            console.error(msg);\r\n        }\r\n        else {\r\n            // AppInsights\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","// Preloading example from https://angular.io/docs/ts/latest/guide/router.html#!#custom-preloading\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { PreloadingStrategy, Route } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { LoggerService } from '../services/logger.service';\r\n\r\n@Injectable()\r\nexport class PreloadModulesStrategy implements PreloadingStrategy {\r\n\r\n  constructor(private logger: LoggerService) { }\r\n\r\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\r\n    if (route.data && route.data.preload) {\r\n      this.logger.log('Preloaded: ' + route.path);\r\n      return load();\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logo-icon',\r\n  templateUrl: './logo-icon.component.html',\r\n  styleUrls: ['./logo-icon.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LogoIconComponent {\r\n  @Input() position: 'center' | 'end' | 'start' = 'center';\r\n}\r\n","<div [class]=\"'text-' + position\">\r\n  <img\r\n    routerLink=\"/home\"\r\n    class=\"cursor-pointer\"\r\n    src=\"./assets/pictures/icon.png\"\r\n    alt=\"Azet D.T.\"\r\n  />\r\n</div>\r\n","<mat-toolbar class=\"mat-elevation-z6 azet-dt-header\">\r\n    <mat-toolbar-row class=\"header-first-row\">\r\n        <div class=\"row w-100 align-items-center\">\r\n            <div class=\"col col-lg-3\">\r\n                <app-logo-icon [position]=\"'end'\"></app-logo-icon>\r\n            </div>\r\n            <div class=\"col ms-4 d-none d-lg-block\">\r\n                <button mat-button\r\n                        routerLink=\"/products\"\r\n                        color=\"primary\">ANVELOPE</button>\r\n            </div>\r\n            <div class=\"col text-end d-none d-lg-block\">\r\n                <a mat-button\r\n                   color=\"primary\"\r\n                   href=\"tel:+40737167631\">\r\n                    <span class=\"material-icons\">\r\n                        phone\r\n                    </span>\r\n                    (0737) 167 631\r\n                </a>\r\n            </div>\r\n            <div class=\"col vertical-line d-none d-lg-block\">\r\n                <button mat-icon-button\r\n                        color=\"secondary\"\r\n                        (click)=\"toggleSearchOverlay()\"\r\n                        type=\"button\">\r\n                    <span class=\"material-icons\">\r\n                        search\r\n                    </span>\r\n                </button>\r\n                <button mat-icon-button\r\n                        color=\"secondary\"\r\n                        (click)=\"toggleMenuOverlay()\">\r\n                    <span class=\"material-icons\">\r\n                        menu\r\n                    </span>\r\n                </button>\r\n            </div>\r\n            <div class=\"col vertical-line d-lg-none\">\r\n                <button mat-icon-button\r\n                        color=\"secondary\"\r\n                        (click)=\"toggleSearchOverlay()\"\r\n                        type=\"button\">\r\n                    <span class=\"material-icons\">\r\n                        search\r\n                    </span>\r\n                </button>\r\n                <button mat-icon-button\r\n                        color=\"secondary\"\r\n                        (click)=\"clickMenuIcon()\">\r\n                    <span class=\"material-icons\">\r\n                        menu\r\n                    </span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </mat-toolbar-row>\r\n    <mat-toolbar-row class=\"header-second-row\">\r\n        <div cdkOverlayOrigin\r\n             #searchOverlay=\"cdkOverlayOrigin\"></div>\r\n        <div cdkOverlayOrigin\r\n             #menuOverlay=\"cdkOverlayOrigin\"></div>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<ng-template cdkConnectedOverlay\r\n             [cdkConnectedOverlayOrigin]=\"searchOverlay\"\r\n             [cdkConnectedOverlayOpen]=\"isSerachOverlayOpened\">\r\n    <div class=\"row azet-dt-search\">\r\n        <div class=\"col-12 text-end\">\r\n            <button mat-icon-button\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    (click)=\"isSerachOverlayOpened = !isSerachOverlayOpened\">\r\n                <span matSuffix\r\n                      class=\"material-icons\">\r\n                    close\r\n                </span>\r\n            </button>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <h3>Caută anvelopă</h3>\r\n            <mat-divider></mat-divider>\r\n            <mat-form-field class=\"w-100 my-3\"\r\n                            appearance=\"outline\">\r\n                <mat-label>Caută după cuvinte cheie :</mat-label>\r\n                <input id=\"searchText\"\r\n                       #n\r\n                       type=\"text\"\r\n                       matInput\r\n                       maxlength=\"40\">\r\n                <span matSuffix\r\n                      class=\"material-icons\">\r\n                    search\r\n                </span>\r\n            </mat-form-field>\r\n            <button mat-raised-button\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    (click)=\"search(n.value)\">\r\n                CAUTĂ\r\n            </button>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template cdkConnectedOverlay\r\n             [cdkConnectedOverlayOrigin]=\"menuOverlay\"\r\n             [cdkConnectedOverlayOpen]=\"isMenuOverlayOpened\">\r\n    <div class=\"row azet-dt-search\">\r\n        <div class=\"col-12 text-end\">\r\n            <button mat-icon-button\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    (click)=\"isMenuOverlayOpened = false\">\r\n                <span matSuffix\r\n                      class=\"material-icons\">\r\n                    close\r\n                </span>\r\n            </button>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 d-flex\">\r\n                    <h6 class=\"ms-3\">Pagini</h6>\r\n                    <span class=\"title material-icons\">\r\n                        keyboard_arrow_down\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <button mat-button\r\n                            color=\"primary-medium\"\r\n                            routerLink=\"/home\">\r\n                        Acasă\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <button mat-button\r\n                            color=\"primary-medium\"\r\n                            routerLink=\"/products\">\r\n                        Anvelope\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <button mat-button\r\n                            color=\"primary-medium\"\r\n                            routerLink=\"/contact\">\r\n                        Contact\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 d-flex\">\r\n                    <h6 class=\"ms-3\">Informații</h6>\r\n                    <span class=\"title material-icons\">\r\n                        keyboard_arrow_down\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <button mat-button\r\n                            color=\"primary-medium\">\r\n                        Cum comand\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <button mat-button\r\n                            color=\"primary-medium\">\r\n                        Prelucrarea datelor\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <button mat-button\r\n                            color=\"primary-medium\">\r\n                        Termeni si conditii\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <button mat-button\r\n                            color=\"primary-medium\">\r\n                        ANPC\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 d-flex\">\r\n                    <h6 class=\"ms-3\">Contact</h6>\r\n                    <span class=\"title material-icons\">\r\n                        keyboard_arrow_down\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <a mat-button\r\n                       color=\"primary-medium\"\r\n                       target=\"_blank\"\r\n                       [href]=\"azetDtLocation\">\r\n                        Strada Zizinului Nr. 123G\r\n                    </a>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <a mat-button\r\n                       color=\"primary-medium\"\r\n                       href=\"tel:+40737167631\">\r\n                        (0737) 167 631\r\n                    </a>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <a mat-button\r\n                       color=\"primary-medium\"\r\n                       href=\"tel:+40754369261\">\r\n                        (0754) 369 261\r\n                    </a>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <a mat-button\r\n                       color=\"primary-medium\"\r\n                       href=\"mailto: office@azet-resapare.ro\">\r\n                        office@azet-resapare.ro\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Output() openSideNavDrawer = new EventEmitter<boolean>();\r\n\r\n  isSerachOverlayOpened = false;\r\n  isMenuOverlayOpened = false;\r\n  azetDtLocation = 'https://www.google.com/maps/place/Azet+DT+Resapare+Anvelope+Camion+SRL/@45.6575573,25.641716,17z/data=!3m1!4b1!4m12!1m6!3m5!1s0x40b35c6b2de4023d:0x1b5da9eebf44f902!2sAzet+DT+Resapare+Anvelope+Camion+SRL!8m2!3d45.6575587!4d25.6439095!3m4!1s0x40b35c6b2de4023d:0x1b5da9eebf44f902!8m2!3d45.6575587!4d25.6439095';\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  search(text: string): void {\r\n    console.log(text, 'text');\r\n  }\r\n\r\n  toggleSearchOverlay(): void {\r\n    this.isSerachOverlayOpened = !this.isSerachOverlayOpened;\r\n    this.isMenuOverlayOpened = false;\r\n  }\r\n\r\n  toggleMenuOverlay(): void {\r\n    this.isMenuOverlayOpened = !this.isMenuOverlayOpened;\r\n    this.isSerachOverlayOpened = false;\r\n  }\r\n\r\n  clickMenuIcon(): void {\r\n    this.openSideNavDrawer.emit(true);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  azetDtLocation = 'https://www.google.com/maps/place/Azet+DT+Resapare+Anvelope+Camion+SRL/@45.6575573,25.641716,17z/data=!3m1!4b1!4m12!1m6!3m5!1s0x40b35c6b2de4023d:0x1b5da9eebf44f902!2sAzet+DT+Resapare+Anvelope+Camion+SRL!8m2!3d45.6575587!4d25.6439095!3m4!1s0x40b35c6b2de4023d:0x1b5da9eebf44f902!8m2!3d45.6575587!4d25.6439095';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row footer-container py-5\">\r\n  <div class=\"col-lg-6 text-center px-5\">\r\n    <app-logo-icon></app-logo-icon>\r\n    <hr />\r\n    <figure class=\"my-3 px-5\">\r\n      <blockquote class=\"blockquote\">\r\n        <p>\r\n          Compania noastră este deja renumită în rândul transportatorilor din\r\n          zonă, raportul calitate/preţ al reşapatelor în sistem KRAIBURG\r\n          câştigând încrederea partenerilor pe termen lung.\r\n        </p>\r\n      </blockquote>\r\n    </figure>\r\n    <hr />\r\n  </div>\r\n  <div class=\"col-lg-3 col-md-6 mt-3\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-lg-start text-center\">\r\n        <h4 class=\"white ms-2\">Informații</h4>\r\n      </div>\r\n      <div class=\"col-12 text-lg-start text-center\">\r\n        <button class=\"text-start mb-1\" mat-button>\r\n          <span class=\"material-icons\"> store </span>\r\n          Cum comand\r\n        </button>\r\n      </div>\r\n      <div class=\"col-12 text-lg-start text-center\">\r\n        <button class=\"text-start mb-1\" mat-button>\r\n          <span class=\"material-icons\"> analytics </span>\r\n          Prelucrarea datelor\r\n        </button>\r\n      </div>\r\n      <div class=\"col-12 text-lg-start text-center\">\r\n        <button class=\"text-start mb-1\" mat-button>\r\n          <span class=\"material-icons\"> task </span>\r\n          Termeni si conditii\r\n        </button>\r\n      </div>\r\n      <div class=\"col-12 text-lg-start text-center\">\r\n        <button class=\"text-start mb-1\" mat-button>\r\n          <span class=\"material-icons\"> policy </span>\r\n          ANPC\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-lg-3 col-md-6 mt-3\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-lg-start text-center\">\r\n        <h4 class=\"white ms-2\">CONTACT</h4>\r\n      </div>\r\n      <div class=\"col-12 text-lg-start text-center\">\r\n        <a\r\n          mat-button\r\n          class=\"text-start mb-1\"\r\n          target=\"_blank\"\r\n          [href]=\"azetDtLocation\"\r\n        >\r\n          <span class=\"material-icons\"> place </span>\r\n          Strada Zizinului Nr. 123G\r\n        </a>\r\n      </div>\r\n      <div class=\"col-12 text-lg-start text-center\">\r\n        <a mat-button class=\"text-start mb-1\" href=\"tel:+40737167631\">\r\n          <span class=\"material-icons\"> call </span>\r\n          (0737) 167 631\r\n        </a>\r\n      </div>\r\n      <div class=\"col-12 text-lg-start text-center\">\r\n        <a mat-button class=\"text-start mb-1\" href=\"tel:+40754369261\">\r\n          <span class=\"material-icons\"> call </span>\r\n          (0754) 369 261\r\n        </a>\r\n      </div>\r\n      <div class=\"col-12 text-lg-start text-center\">\r\n        <a\r\n          mat-button\r\n          class=\"text-start mb-1\"\r\n          href=\"mailto: office@azet-resapare.ro\"\r\n        >\r\n          <span class=\"material-icons\"> email </span>\r\n          office@azet-resapare.ro\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row sub-footer-container\">\r\n  <div class=\"col-12 text-center p-4\">\r\n    Copyright © Azet D.T. 2014 | Toate drepturile rezervate.\r\n  </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { azetDTGoogleMapsLocation } from '../../utils/utils';\r\nimport { DialogContentScheduleInServiceComponent } from '../dialog-content-schedule-in-service/dialog-content-schedule-in-service.component';\r\nimport { DialogContentScheduleComponent } from '../dialog-content-schedule/dialog-content-schedule.component';\r\n\r\n@Component({\r\n  selector: 'app-layout-shop',\r\n  templateUrl: './layout-shop.component.html',\r\n  styleUrls: ['./layout-shop.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LayoutShopComponent implements OnInit {\r\n\r\n  azetDtLocation = azetDTGoogleMapsLocation;\r\n  // cart$: Observable<Cart>;\r\n\r\n  constructor(\r\n    // private router: Router,\r\n    // private cartService: CartService,\r\n    public dialog: MatDialog\r\n  ) {\r\n    // this.cart$ = this.cartService.cartProducts$;\r\n\r\n    // temporarily removed;\r\n    // this.router.events.subscribe((event: any) => {\r\n    //   switch (true) {\r\n    //     case event instanceof NavigationStart: {\r\n    //       this.loading.next(true);\r\n    //       break;\r\n    //     }\r\n    //     case event instanceof NavigationEnd: {\r\n    //     }\r\n    //     case event instanceof NavigationCancel:\r\n    //     case event instanceof NavigationError: {\r\n    //       this.loading.next(false);\r\n    //       break;\r\n    //     }\r\n    //     default: {\r\n    //       break;\r\n    //     }\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // const getProductsFromLocalStorage = localStorage.getItem(EnumLocalStorageKeysName.PRODUCTS);\r\n\r\n    // if (getProductsFromLocalStorage) {\r\n    //   console.log(JSON.parse(getProductsFromLocalStorage), 'getProductsFromLocalStorage')\r\n    //   this.cartService.setCartProducts(JSON.parse(getProductsFromLocalStorage));\r\n    // }\r\n  }\r\n\r\n  openScheduleInService(): void {\r\n    this.dialog.open(DialogContentScheduleInServiceComponent, {\r\n      width: '400px',\r\n      disableClose: true\r\n    });\r\n  }\r\n\r\n  openSchedule(): void {\r\n    this.dialog.open(DialogContentScheduleComponent);\r\n  }\r\n}\r\n","<app-header (openSideNavDrawer)=\"snavleft.toggle()\"></app-header>\r\n<mat-sidenav-container class=\"azet-dt-sidenav-container\"\r\n                       [style.marginTop.px]=\"0\">\r\n    <mat-sidenav #snavleft\r\n                 [mode]=\"'over'\"\r\n                 [fixedInViewport]=\"true\"\r\n                 fixedTopGap=\"100\">\r\n        <mat-nav-list>\r\n            <a mat-list-item\r\n               class=\"mt-1\"\r\n               href=\"tel:+40737167631\">\r\n                <span class=\"material-icons text-success\">phone</span>\r\n                <span>(0737) 167 631</span>\r\n            </a>\r\n            <a mat-list-item\r\n               class=\"mt-1\"\r\n               (click)=\"openScheduleInService()\">\r\n                <span class=\"material-icons text-warning\">tire_repair</span>\r\n                <span>PROGRAMEAZĂ ÎN SERVICE</span>\r\n            </a>\r\n            <a mat-list-item\r\n               class=\"mt-1\"\r\n               target=\"_blank\"\r\n               [href]=\"azetDtLocation\">\r\n                <span class=\"material-icons text-primary\">place</span>\r\n                <span>LOCAȚIE</span>\r\n            </a>\r\n            <a mat-list-item\r\n               class=\"mt-1\"\r\n               (click)=\"openSchedule()\">\r\n                <span class=\"material-icons text-danger\">schedule</span>\r\n                <span>PROGRAM</span>\r\n            </a>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <main class=\"container-fluid\">\r\n            <router-outlet></router-outlet>\r\n            <app-footer></app-footer>\r\n        </main>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PreloadModulesStrategy } from './core/strategies/preload-modules.strategy';\r\nimport { LayoutShopComponent } from './shared/components/layout-shop/layout-shop.component';\r\n\r\nconst AppRoutes: Routes = [\r\n    {\r\n        path: 'home',\r\n        component: LayoutShopComponent,\r\n        loadChildren: () => import('./shop-home/shop-home.module').then(m => m.ShopHomeModule)\r\n    },\r\n    {\r\n        path: 'products',\r\n        component: LayoutShopComponent,\r\n        loadChildren: () => import('./shop-products/shop-products.module').then(m => m.ShopProductsModule)\r\n    },\r\n    {\r\n        path: 'contact',\r\n        component: LayoutShopComponent,\r\n        loadChildren: () => import('./shop-contact/shop-contact.module').then(m => m.ShopContactModule)\r\n    },\r\n    {\r\n        path: 'cart',\r\n        component: LayoutShopComponent,\r\n        loadChildren: () => import('./shop-cart/shop-cart.module').then(m => m.ShopCartModule)\r\n    },\r\n    {\r\n        path: 'authentication',\r\n        component: LayoutShopComponent,\r\n        loadChildren: () => import('./shop-authentication/shop-authentication.module').then(m => m.ShopAuthenticationModule)\r\n    },\r\n    // {\r\n    //     path: 'login',\r\n    //     component: LoginComponent\r\n    // },\r\n    // {\r\n    //     path: 'dashboard',\r\n    //     component: DashboardComponent\r\n    // },\r\n    // {\r\n    //     path: 'orders',\r\n    //     component: OrdersComponent\r\n    // },\r\n    // {\r\n    //     path: 'products',\r\n    //     component: ProductsComponent\r\n    // },\r\n    // {\r\n    //     path: 'reviews',\r\n    //     component: ReviewsComponent\r\n    // },\r\n    // catch any unfound routes and redirect to home page\r\n    // the path bellow must to be last\r\n    {\r\n        path: '**',\r\n        pathMatch: 'full',\r\n        redirectTo: '/home'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            AppRoutes,\r\n            {\r\n                preloadingStrategy: PreloadModulesStrategy,\r\n                relativeLinkResolution: 'legacy',\r\n                // useHash: !environment.production,\r\n                scrollPositionRestoration: 'enabled',\r\n                anchorScrolling: 'enabled'\r\n            }\r\n        )\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [PreloadModulesStrategy]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  ngOnInit(): void { }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from 'src/app/shared/service/authentication.service';\r\n\r\n@Injectable()\r\nexport class CanActivateGuard implements CanActivate {\r\n\r\n    constructor(public authenticationService: AuthenticationService, public router: Router) { }\r\n\r\n    canActivate(): Observable<boolean> | Promise<boolean> | boolean {\r\n        if (this.authenticationService.isAuthenticated) {\r\n            this.router.navigate(['/admin/dashboard']);\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { EnsureModuleLoadedOnceGuard } from './ensure-module-loaded-once.guard';\r\nimport { CanActivateGuard } from './guards/can-activate.guard';\r\nimport { LocalStorageService } from './services/local-storage.service';\r\nimport { LoggerService } from './services/logger.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [\r\n    RouterModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    CanActivateGuard,\r\n    LoggerService,\r\n    LocalStorageService,\r\n    {\r\n      provide: 'Window',\r\n      useFactory: () => window\r\n    }\r\n  ]\r\n})\r\n\r\nexport class CoreModule extends EnsureModuleLoadedOnceGuard { // Ensure that CoreModule is only loaded into AppModule\r\n\r\n  // Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\r\n  // constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\r\n  //   super(parentModule);\r\n  // }\r\n  constructor(\r\n    @Optional() @SkipSelf() parentModule: CoreModule,\r\n  ) {\r\n    super(parentModule);\r\n  }\r\n}\r\n","export class EnsureModuleLoadedOnceGuard {\r\n\r\n    constructor(targetModule: any) {\r\n        if (targetModule) {\r\n            throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    CoreModule,\r\n  ],\r\n  declarations: [AppComponent],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { enableProdMode, LOCALE_ID } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule, {\r\n    providers: [{ provide: LOCALE_ID, useValue: 'ro_RO' }]\r\n  })\r\n  .catch(err => console.error(err));\r\n"]}