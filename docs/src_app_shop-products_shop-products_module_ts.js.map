{"version":3,"file":"src_app_shop-products_shop-products_module_ts.js","mappings":"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","names":["M","Products","n","constructor","e","getById","this","http","get","getAll","l","t","factory","o","baseUrl","location","origin","ngOnInit","clickOnCopyToClipboard","_snackBar","open","duration","C","selectors","transform","c","r","a","oxw","addCartProduct","m","pure","A","y","route","parent","snapshot","params","id","product$","productsService","f","p","u","todoLeafItemSelectionToggle","todoItemSelectionToggle","expandable","children","length","name","level","j","d","transformer","treeControl","treeFlattener","$","dataSource","data","expand","dataNodes","getParentNode","getLevel","indexOf","descendantsAllSelected","getDescendants","every","checklistSelection","isSelected","descendantsPartiallySelected","some","console","log","toggle","select","deselect","forEach","checkAllParentsSelection","checkRootNodeSelection","T","value","label","Z","checkLocalStorageViewMode","changeViewMode","P","showAddButton","showRemoveButton","clickAddToCart","emit","removeCartProduct","clickRemoveToCart","S","getProducts","products$","viewMode","_","at","path","component","h","O","g","imports","R"],"sourceRoot":"webpack:///","sources":["./src/app/shared/enum/http-url.ts","./src/app/shared/service/products.service.ts","./src/app/shared/components/copy-link/copy-link.component.ts","./src/app/shared/components/copy-link/copy-link.component.html","./src/app/shared/pipes/currency.pipe.ts","./src/app/shop-products/shop-product-details/shop-product-details.component.html","./src/app/shop-products/shop-product-details/shop-product-details.component.ts","./src/app/shared/enum/price-range.ts","./src/app/shared/enum/sort-value.ts","./src/app/shop-products/shop-products-filter/shop-products-filter.component.html","./src/app/shop-products/shop-products-filter/shop-products-filter.component.ts","./src/app/shop-products/shop-products-sort/shop-products-sort.component.html","./src/app/shop-products/shop-products-sort/shop-products-sort.component.ts","./src/app/shared/components/products-card/products-card.component.html","./src/app/shared/components/products-card/products-card.component.ts","./src/app/shop-products/shop-products-view/shop-products-view.component.ts","./src/app/shop-products/shop-products-view/shop-products-view.component.html","./src/app/shop-products/shop-products-routing.module.ts","./src/app/shop-products/shop-products.module.ts"],"sourcesContent":["export enum HttpUrls {\r\n    Products = 'api/products',\r\n    Login = 'api/login',\r\n    Register = 'api/register',\r\n    ForgetPassword = 'api/forget-password'\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../class/base-cart-item';\r\nimport { HttpUrls } from '../enum/http-url';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getById(id: string): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${HttpUrls.Products}/${id}`);\r\n  }\r\n\r\n  getAll(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(HttpUrls.Products);\r\n  }\r\n\r\n}\r\n","import { PlatformLocation } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-copy-link',\r\n  templateUrl: './copy-link.component.html',\r\n  styleUrls: ['./copy-link.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CopyLinkComponent implements OnInit {\r\n\r\n  baseUrl = '';\r\n\r\n  @Input() pathUrl = '';\r\n\r\n  constructor(\r\n    platformLocation: PlatformLocation,\r\n    private _snackBar: MatSnackBar\r\n  ) {\r\n    this.baseUrl = (platformLocation as any).location.origin;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  clickOnCopyToClipboard() {\r\n    this._snackBar.open('Link copiat!', 'Închide', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","<button mat-icon-button\r\n        aria-label=\"Copiază link-ul.\"\r\n        matTooltip=\"Copiază link-ul.\"\r\n        [cdkCopyToClipboard]=\"(pathUrl)? (baseUrl + pathUrl) : (baseUrl)\"\r\n        (click)=\"clickOnCopyToClipboard()\">\r\n    <span class=\"material-icons\">\r\n        link\r\n    </span>\r\n</button>","import { formatCurrency, getCurrencySymbol } from '@angular/common';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport memo from 'memo-decorator';\r\n\r\n@Pipe({ name: 'azetDtCurrency' })\r\nexport class AzetDTCurrencyPipe implements PipeTransform {\r\n    @memo()\r\n    transform(\r\n        value: number | null,\r\n        currencyCode: string = 'Lei',\r\n        display:\r\n            | 'code'\r\n            | 'symbol'\r\n            | 'symbol-narrow'\r\n            | string\r\n            | boolean = 'symbol',\r\n        digitsInfo: string = '3.2-2',\r\n        locale: string = 'ro',\r\n    ): string | null {\r\n\r\n        if (value != null) {\r\n            return formatCurrency(\r\n                value,\r\n                locale,\r\n                getCurrencySymbol(currencyCode, 'wide'),\r\n                currencyCode,\r\n                digitsInfo,\r\n            );\r\n        }\r\n\r\n        return '';\r\n    }\r\n}","<div class=\"row product-details-container\">\r\n  <div class=\"col-12\">\r\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n  </div>\r\n  <div class=\"col-12\">\r\n    <div *ngIf=\"(product$ | async) as product\"\r\n         class=\"row mt-5\">\r\n      <div class=\"col-4\">\r\n        <mat-card class=\"product-card\">\r\n          <mat-chip matTooltip=\"Super ofertă, nu o rata!\"\r\n                    matTooltipPosition=\"above\"\r\n                    selected>- 21%</mat-chip>\r\n          <div mat-card-image\r\n               class=\"product-card__img text-center\">\r\n            <img src=\"./assets/pictures/tires/tire.png\"\r\n                 [alt]=\"product[0].name\">\r\n          </div>\r\n          <mat-divider inset></mat-divider>\r\n          <mat-card-actions>\r\n            <div class=\"d-flex justify-content-center\">\r\n              <button mat-raised-button\r\n                      color=\"primary\"\r\n                      (click)=\"addCartProduct(product[0])\">\r\n                <span class=\"material-icons\">\r\n                  add_shopping_cart\r\n                </span>\r\n                ADAUGĂ ÎN COȘ\r\n              </button>\r\n            </div>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n      </div>\r\n      <div class=\"col-8\">\r\n        <mat-toolbar class=\"mat-elevation-z6\"\r\n                     color=\"primary\">\r\n          <mat-toolbar-row>\r\n            <span class=\"material-icons mr-2\">\r\n              verified\r\n            </span>\r\n            <span>{{product[0].name}}</span>\r\n            <span class=\"navbar-spacer\"></span>\r\n            <app-copy-link [pathUrl]=\"'/products/'+ product[0].id\"></app-copy-link>\r\n          </mat-toolbar-row>\r\n        </mat-toolbar>\r\n        <mat-list>\r\n          <div mat-subheader>Detalii anvelopă</div>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              payments\r\n            </span>\r\n            <div mat-line>Preț</div>\r\n            <div mat-line>\r\n              {{product[0].price | azetDtCurrency}}\r\n              <span class=\"sale mx-2\"\r\n                    matTooltip=\"Super ofertă, nu o rata!\"\r\n                    matTooltipPosition=\"above\">\r\n                <del>{{300 | azetDtCurrency}}</del>\r\n                ( - 21%)\r\n              </span>\r\n            </div>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              production_quantity_limits\r\n            </span>\r\n            <div mat-line>Disponibilitate</div>\r\n            <div mat-line>\r\n              <!-- <app-product-state [productState]=\"product[0].state\"\r\n                                   [productQuantity]=\"product[0].quantity\"></app-product-state> -->\r\n            </div>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              directions_car\r\n            </span>\r\n            <div mat-line>Vehicule</div>\r\n            <div mat-line>\r\n              <mat-chip-list aria-label=\"Vehicule\">\r\n                <!-- <mat-chip *ngFor=\"let carCategory of product[0].carCategories\">\r\n                    {{carCategory}}\r\n                  </mat-chip> -->\r\n              </mat-chip-list>\r\n            </div>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              square_foot\r\n            </span>\r\n            <div mat-line>Dimensiune</div>\r\n            <!-- <div mat-line>{{product[0].size}}</div> -->\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              edit_road\r\n            </span>\r\n            <div mat-line>Profil</div>\r\n            <!-- <div mat-line>{{product[0].profile}}</div> -->\r\n          </mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <div mat-subheader>Descriere</div>\r\n          <mat-list-item>\r\n            <span mat-list-icon\r\n                  class=\"material-icons\">\r\n              description\r\n            </span>\r\n            <div mat-line>Câteva detalii</div>\r\n            <!-- <div mat-line>{{product[0].description}}</div> -->\r\n          </mat-list-item>\r\n        </mat-list>\r\n        <mat-divider></mat-divider>\r\n        <app-contact-list [showJuridicDetails]=\"false\"></app-contact-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from 'src/app/shared/class/base-cart-item';\r\nimport { State } from 'src/app/shared/enum/state';\r\nimport { CartService } from 'src/app/shared/service/cart.service';\r\nimport { ProductsService } from 'src/app/shared/service/products.service';\r\n\r\n@Component({\r\n  selector: 'app-shop-product-details',\r\n  templateUrl: './shop-product-details.component.html',\r\n  styleUrls: ['./shop-product-details.component.scss']\r\n})\r\nexport class ShopProductDetailsComponent implements OnInit {\r\n\r\n  stateTemplate = State;\r\n  product$ = new Observable<Product[]>();\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private productsService: ProductsService,\r\n    public cartService: CartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const productId: string | null = this.route.parent?.snapshot.params['id'];\r\n\r\n    if (productId) {\r\n      this.product$ = this.productsService.getById(productId);\r\n    }\r\n  }\r\n\r\n  addCartProduct(product: Product) {\r\n    // this.cartService.addCartProduct(product);\r\n  }\r\n}\r\n","export enum PriceRange {\r\n    UNDER100 = '<100',\r\n    BETWEEN100_250 = '>100&<250',\r\n    BETWEEN250_500 = '>250&<500',\r\n    BETWEEN500_1000 = '>500&<1000',\r\n    OVER1000 = '>1000'\r\n}\r\n","export enum SortValue {\r\n    POPULAR = 'popular',\r\n    NEWEST = 'newest',\r\n    HIGH_PRICE = 'highPrice',\r\n    LOW_PRICE = 'lowPrice'\r\n}\r\n","<div class=\"row filter-container\">\r\n  <div class=\"col-12 mb-2\">\r\n    <mat-card class=\"filter--zone-1 d-flex align-items-center\">\r\n      <i class=\"fas fa-filter\"></i>\r\n      <span class=\"filter--title pl-2\">FILTREAZĂ DUPĂ</span>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"filter--zone-2\">\r\n      <mat-tree [dataSource]=\"dataSource\"\r\n                [treeControl]=\"treeControl\">\r\n        <!-- This is the tree node template for leaf nodes -->\r\n        <mat-tree-node *matTreeNodeDef=\"let node\"\r\n                       matTreeNodePadding>\r\n          <!-- use a disabled button to provide padding for tree leaf -->\r\n          <button mat-icon-button\r\n                  disabled></button>\r\n          <mat-checkbox class=\"checklist-leaf-node\"\r\n                        [checked]=\"checklistSelection.isSelected(node)\"\r\n                        (change)=\"todoLeafItemSelectionToggle(node)\">{{node.name}}</mat-checkbox>\r\n        </mat-tree-node>\r\n        <!-- This is the tree node template for expandable nodes -->\r\n        <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\"\r\n                       matTreeNodePadding>\r\n          <button mat-icon-button\r\n                  matTreeNodeToggle\r\n                  [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            <span class=\"material-icons mat-icon-rtl-mirror\">\r\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n            </span>\r\n          </button>\r\n          <mat-checkbox [checked]=\"descendantsAllSelected(node)\"\r\n                        [indeterminate]=\"descendantsPartiallySelected(node)\"\r\n                        (change)=\"todoItemSelectionToggle(node)\">{{node.name}}</mat-checkbox>\r\n        </mat-tree-node>\r\n      </mat-tree>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { SelectionModel } from '@angular/cdk/collections';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { PriceRange } from 'src/app/shared/enum/price-range';\r\nimport { State } from 'src/app/shared/enum/state';\r\nimport { FilterFlatNode } from 'src/app/shared/interface/filter-flat-node';\r\nimport { FilterNode } from 'src/app/shared/interface/filter-node';\r\n\r\n@Component({\r\n  selector: 'app-shop-products-filter',\r\n  templateUrl: './shop-products-filter.component.html',\r\n  styleUrls: ['./shop-products-filter.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ShopProductsFilterComponent implements OnInit {\r\n\r\n  @Output() clickFilterItem = new EventEmitter();\r\n\r\n  private transformer = (node: FilterNode, level: number) => {\r\n    return <FilterFlatNode>{\r\n      expandable: !!node.children && node.children.length > 0,\r\n      name: node.name,\r\n      level,\r\n      id: node.id,\r\n    };\r\n  }\r\n\r\n  treeControl = new FlatTreeControl<FilterFlatNode>(node => node.level, node => node.expandable);\r\n\r\n  treeFlattener = new MatTreeFlattener(this.transformer, (node: any) => node.level, (node: any) => node.expandable, (node: any) => node.children);\r\n\r\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<FilterFlatNode>(true /* multiple */);\r\n\r\n  getLevel = (node: FilterFlatNode) => node.level;\r\n\r\n  constructor() {\r\n    this.dataSource.data = [\r\n      {\r\n        name: 'Disponibilitate',\r\n        id: '',\r\n        children: [\r\n          { name: 'În stoc', id: State.STOCK },\r\n          { name: 'La comanda', id: State.COMMAND }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Producător',\r\n        id: '',\r\n        children: [\r\n          { name: 'Continental', id: 'Continental' },\r\n          { name: 'Pirelli', id: 'Pirelli' },\r\n          { name: 'Michelin', id: 'Michelin' },\r\n          { name: 'Bridgestone', id: 'Bridgestone' },\r\n          { name: 'Hankook', id: 'Hankook' },\r\n          { name: 'Goodyear', id: 'Goodyear' }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Preț',\r\n        id: '',\r\n        children: [\r\n          { name: 'Sub 100 lei', id: PriceRange.UNDER100 },\r\n          { name: 'Între 100 și 250 lei', id: PriceRange.BETWEEN100_250 },\r\n          { name: 'Între 250 și 500 lei', id: PriceRange.BETWEEN250_500 },\r\n          { name: 'Între 500 și 1000 lei', id: PriceRange.BETWEEN500_1000 },\r\n          { name: 'Peste 1000', id: PriceRange.OVER1000 }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Lățime',\r\n        id: '',\r\n        children: [\r\n          { name: '225', id: '225' },\r\n          { name: '215', id: '1' },\r\n          { name: '235', id: '1' },\r\n          { name: '205', id: '1' },\r\n          { name: '195', id: '1' },\r\n          { name: '255', id: '1' }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Înălțime',\r\n        id: '',\r\n        children: [\r\n          { name: '225', id: '1' },\r\n          { name: '215', id: '1' },\r\n          { name: '235', id: '1' },\r\n          { name: '205', id: '1' },\r\n          { name: '195', id: '1' },\r\n          { name: '255', id: '1' }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Diametru',\r\n        id: '',\r\n        children: [\r\n          { name: '16', id: '1' },\r\n          { name: '17', id: '1' },\r\n          { name: '18', id: '1' },\r\n          { name: '15', id: '1' },\r\n          { name: '19', id: '1' },\r\n          { name: '20', id: '1' }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.treeControl.expand(this.treeControl.dataNodes[0]);\r\n    this.treeControl.expand(this.treeControl.dataNodes[3]);\r\n  }\r\n\r\n  /* Get the parent node of a node */\r\n  getParentNode(node: FilterFlatNode): FilterFlatNode | null {\r\n    const currentLevel = this.getLevel(node);\r\n\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n\r\n      if (this.getLevel(currentNode) < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected. */\r\n  descendantsAllSelected(node: FilterFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    return descAllSelected;\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: FilterFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n  todoItemSelectionToggle(node: FilterFlatNode): void {\r\n    console.log(node, 'todoItemSelectionToggle node');\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n\r\n    // Force update for the parent\r\n    descendants.forEach(child => this.checklistSelection.isSelected(child));\r\n    this.checkAllParentsSelection(node);\r\n  }\r\n\r\n  /** Check root node checked state and change it accordingly */\r\n  checkRootNodeSelection(node: FilterFlatNode): void {\r\n    const nodeSelected = this.checklistSelection.isSelected(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    if (nodeSelected && !descAllSelected) {\r\n      this.checklistSelection.deselect(node);\r\n    } else if (!nodeSelected && descAllSelected) {\r\n      this.checklistSelection.select(node);\r\n    }\r\n  }\r\n\r\n  /* Checks all the parents when a leaf node is selected/unselected */\r\n  checkAllParentsSelection(node: FilterFlatNode): void {\r\n    let parent: FilterFlatNode | null = this.getParentNode(node);\r\n    while (parent) {\r\n      this.checkRootNodeSelection(parent);\r\n      parent = this.getParentNode(parent);\r\n    }\r\n  }\r\n\r\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\r\n  todoLeafItemSelectionToggle(node: FilterFlatNode): void {\r\n    console.log(node, 'todoLeafItemSelectionToggle node');\r\n    this.checklistSelection.toggle(node);\r\n    this.checkAllParentsSelection(node);\r\n  }\r\n\r\n  hasChild = (_: number, node: FilterFlatNode) => node.expandable;\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12 mb-2\">\r\n    <mat-card class=\"sort d-flex align-items-center\">\r\n      <i class=\"fas fa-sort-amount-up\"></i>\r\n      <span class=\"sort--title pl-2\">SORTEAZĂ DUPĂ</span>\r\n      <mat-form-field appearance=\"outline\"\r\n                      class=\"sort--select\">\r\n        <mat-label>Ați selectat:</mat-label>\r\n        <mat-select>\r\n          <mat-option>-- Niciuna --</mat-option>\r\n          <mat-option *ngFor=\"let sort of sorts\"\r\n                      [value]=\"sort.value\">\r\n            {{sort.label}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-button-toggle-group aria-label=\"Mod de afișare\"\r\n                               [value]=\"viewMode\"\r\n                               class=\"ml-auto\"\r\n                               (change)=\"changeViewMode($event?.value)\">\r\n        <mat-button-toggle [value]=\"templateViewMode.GRID\"><i class=\"fas fa-th\"></i></mat-button-toggle>\r\n        <mat-button-toggle [value]=\"templateViewMode.LIST\"><i class=\"fas fa-bars\"></i></mat-button-toggle>\r\n      </mat-button-toggle-group>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { LocalStorageService } from 'src/app/core/services/local-storage.service';\r\nimport { SortValue } from 'src/app/shared/enum/sort-value';\r\nimport { ViewMode } from 'src/app/shared/enum/view-mode';\r\nimport { DropdownValue } from 'src/app/shared/interface/dropdown-value';\r\n\r\n@Component({\r\n  selector: 'app-shop-products-sort',\r\n  templateUrl: './shop-products-sort.component.html',\r\n  styleUrls: ['./shop-products-sort.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ShopProductsSortComponent implements OnInit {\r\n\r\n  @Output() clickViewMode = new EventEmitter<ViewMode>();\r\n\r\n  sorts: DropdownValue[] = [\r\n    { value: SortValue.POPULAR, label: 'Cele mai populare' },\r\n    { value: SortValue.NEWEST, label: 'Cele mai noi' },\r\n    { value: SortValue.HIGH_PRICE, label: 'Preț crescător' },\r\n    { value: SortValue.LOW_PRICE, label: 'Preț descrescător' }\r\n  ];\r\n  viewMode = ViewMode.GRID;\r\n  templateViewMode = ViewMode;\r\n\r\n  constructor(private localStorageService: LocalStorageService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.checkLocalStorageViewMode();\r\n  }\r\n\r\n  changeViewMode(value: any): void {\r\n    // this.localStorageService.storeValue(value, EnumLocalStorageKeysName.SORT_VIEW);\r\n\r\n    // if (value) {\r\n    //   this.clickViewMode.emit(value);\r\n    // }\r\n  }\r\n\r\n  checkLocalStorageViewMode(): void {\r\n    // const localStorageSortView = this.localStorageService.getStorageValueByKey(EnumLocalStorageKeysName.SORT_VIEW);\r\n\r\n    // if (localStorageSortView != null) {\r\n    //   this.viewMode = localStorageSortView;\r\n    //   this.changeViewMode(localStorageSortView);\r\n    // }\r\n  }\r\n}\r\n","<ng-container [ngSwitch]=\"viewMode\">\r\n  <div *ngSwitchCase=\"viewModeTemplate.GRID\"\r\n       class=\"row\">\r\n    <div *ngIf=\"loading\"\r\n         class=\"col-12\">\r\n      <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </div>\r\n    <!-- <div *ngFor=\"let product of products;trackBy: trackByService.product\"\r\n         class=\"col-sm-12 col-md-6 col-lg-6 col-xl-4 mb-2 product-container\">\r\n      <mat-card class=\"product-card\">\r\n        <mat-chip matTooltip=\"Super ofertă, nu o rata!\"\r\n                  matTooltipPosition=\"above\"\r\n                  selected>- 20%</mat-chip>\r\n        <div mat-card-image\r\n             class=\"product-card__img text-center\">\r\n          <img src=\"./assets/pictures/tires/tire.png\"\r\n               [routerLink]=\"['/products/' + product.id]\"\r\n               [alt]=\"product.name\">\r\n        </div>\r\n        <mat-card-title>{{product.name | uppercase}}</mat-card-title>\r\n        <mat-card-subtitle>{{product.producer | uppercase}}</mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"product-card__price text-center\">\r\n            <span class=\"price\">{{200 | azetDtCurrency}}</span>\r\n            <span class=\"sale mx-2\"\r\n                  matTooltip=\"Super ofertă, nu o rata!\"\r\n                  matTooltipPosition=\"above\"><del>{{300 | azetDtCurrency}}</del></span>\r\n            <div class=\"without-tax\">\r\n              {{280 | azetDtCurrency}} Fără TVA\r\n            </div>\r\n          </div>\r\n          <mat-divider inset></mat-divider>\r\n          <app-product-state [productState]=\"product.state\"\r\n                             [productQuantity]=\"product.quantity\"></app-product-state>\r\n          <mat-chip-list aria-label=\"Vehicule\">\r\n            <mat-chip *ngFor=\"let carCategory of product.carCategories\">\r\n              {{carCategory}}\r\n            </mat-chip>\r\n          </mat-chip-list>\r\n        </mat-card-content>\r\n        <mat-divider inset></mat-divider>\r\n        <mat-card-actions>\r\n          <div class=\"d-flex justify-content-between\">\r\n            <button mat-raised-button\r\n                    color=\"primary\"\r\n                    (click)=\"addCartProduct(product)\">\r\n              <span class=\"material-icons\">\r\n                add_shopping_cart\r\n              </span>\r\n              ADAUGĂ ÎN COȘ\r\n            </button>\r\n            <app-copy-link [pathUrl]=\"'/products/'+ product.id\"></app-copy-link>\r\n          </div>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div> -->\r\n  </div>\r\n  <div *ngSwitchCase=\"viewModeTemplate.LIST\"\r\n       class=\"row\">\r\n    <div *ngIf=\"loading\"\r\n         class=\"col-12\">\r\n      <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </div>\r\n    <!-- <div *ngFor=\"let product of products;trackBy: trackByService.product\"\r\n         class=\"col-12 mb-2 product-container\">\r\n      <mat-card class=\"product-card\">\r\n        <mat-card-title-group>\r\n          <mat-card-title class=\"align-items-center\">\r\n            {{product.name | uppercase}}\r\n          </mat-card-title>\r\n          <mat-card-subtitle>\r\n            {{product.producer | uppercase}}\r\n          </mat-card-subtitle>\r\n        </mat-card-title-group>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-12 col-md-4 col-lg-4 col-xl-3\">\r\n              <div mat-card-image\r\n                   class=\"product-card__img text-center\">\r\n                <img src=\"./assets/pictures/tires/tire.png\"\r\n                     [routerLink]=\"['/products/' + product.id]\"\r\n                     [alt]=\"product.name\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-12 col-md-8 col-lg-8 col-xl-9\">\r\n              <div class=\"product-card__price\">\r\n                <span class=\"price\">{{product.price | azetDtCurrency}}</span>\r\n                <span class=\"sale mx-2\"\r\n                      matTooltip=\"Super ofertă, nu o rata!\"\r\n                      matTooltipPosition=\"above\">\r\n                  <del>{{300 | azetDtCurrency}}</del>\r\n                  ( - 20%)\r\n                </span>\r\n                <div class=\"without-tax\">\r\n                  {{280 | azetDtCurrency}} Fără TVA\r\n                </div>\r\n              </div>\r\n              <mat-divider inset></mat-divider>\r\n              <app-product-state [productState]=\"product.state\"\r\n                                 [productQuantity]=\"product.quantity\"></app-product-state>\r\n              <mat-chip-list aria-label=\"Vehicule\">\r\n                <mat-chip *ngFor=\"let carCategory of product.carCategories\">\r\n                  {{carCategory}}\r\n                </mat-chip>\r\n              </mat-chip-list>\r\n              <mat-divider inset\r\n                           class=\"my-2\"></mat-divider>\r\n              <div *ngIf=\"product.size\">Dimensiune: {{product.size}}</div>\r\n              <div *ngIf=\"product.profile\">Profil: {{product.profile}}</div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n        <mat-divider inset></mat-divider>\r\n        <mat-card-actions>\r\n          <div class=\"d-flex justify-content-between\">\r\n            <button *ngIf=\"options && options.showAddButton\"\r\n                    mat-raised-button\r\n                    color=\"primary\"\r\n                    (click)=\"addCartProduct(product)\">\r\n              <span class=\"material-icons\">\r\n                add_shopping_cart\r\n              </span>\r\n              ADAUGĂ ÎN COȘ\r\n            </button>\r\n            <button *ngIf=\"options && options.showRemoveButton\"\r\n                    mat-stroked-button\r\n                    color=\"primary\"\r\n                    (click)=\"removeCartProduct(product)\">\r\n              <span class=\"material-icons\">\r\n                delete\r\n              </span>\r\n              SCOATE DIN COȘ ( {{product.nbOfProducts}} )\r\n            </button>\r\n            <app-copy-link [pathUrl]=\"'/products/'+ product.id\"></app-copy-link>\r\n          </div>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div> -->\r\n  </div>\r\n</ng-container>","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Product } from '../../class/base-cart-item';\r\nimport { State } from '../../enum/state';\r\nimport { ViewMode } from '../../enum/view-mode';\r\n\r\n@Component({\r\n  selector: 'app-products-card',\r\n  templateUrl: './products-card.component.html',\r\n  styleUrls: ['./products-card.component.scss'],\r\n  // When using OnPush detectors, then the framework will check an OnPush\r\n  // component when any of its input properties changes, when it fires\r\n  // an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProductsCardComponent implements OnInit {\r\n\r\n  @Input() products: Product[] | null = [];\r\n  @Input() viewMode = ViewMode.GRID;\r\n  @Input() loading: boolean | null = false;\r\n  @Input() options: any = {\r\n    showAddButton: true,\r\n    showRemoveButton: false\r\n  };\r\n  @Output() clickAddToCart = new EventEmitter<Product>();\r\n  @Output() clickRemoveToCart = new EventEmitter<Product>();\r\n\r\n  viewModeTemplate = ViewMode;\r\n  stateTemplate = State;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addCartProduct(product: Product): void {\r\n    this.clickAddToCart.emit(product);\r\n  }\r\n\r\n  removeCartProduct(product: Product): void {\r\n    this.clickRemoveToCart.emit(product);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from 'src/app/shared/class/base-cart-item';\r\nimport { ViewMode } from 'src/app/shared/enum/view-mode';\r\nimport { CartService } from 'src/app/shared/service/cart.service';\r\nimport { ProductsService } from 'src/app/shared/service/products.service';\r\n\r\n@Component({\r\n  selector: 'app-shop-products-view',\r\n  templateUrl: './shop-products-view.component.html',\r\n  styleUrls: ['./shop-products-view.component.scss']\r\n})\r\nexport class ShopProductsViewComponent implements OnInit {\r\n\r\n  viewMode = ViewMode.GRID;\r\n  products$ = new Observable<Product[]>();\r\n\r\n  constructor(\r\n    private productsService: ProductsService,\r\n    private cartService: CartService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProducts();\r\n  }\r\n\r\n  getProducts() {\r\n    this.products$ = this.productsService.getAll();\r\n  }\r\n\r\n  changeViewMode(viewMode: ViewMode): void {\r\n    this.viewMode = viewMode;\r\n  }\r\n\r\n  // addCartProduct(product: DemoCartItem) {\r\n  //   this.cartService.addCartProduct(product);\r\n  // }\r\n\r\n}\r\n","<div class=\"row justify-content-center mt-5\">\r\n  <div class=\"col-3\">\r\n    <app-shop-products-filter></app-shop-products-filter>\r\n  </div>\r\n  <div class=\"col-9\">\r\n    <app-shop-products-sort\r\n      (clickViewMode)=\"changeViewMode($event)\"\r\n    ></app-shop-products-sort>\r\n    <app-products-card [products]=\"products$ | async\"></app-products-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ShopProductDetailsComponent } from './shop-product-details/shop-product-details.component';\r\nimport { ShopProductsViewComponent } from './shop-products-view/shop-products-view.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ShopProductsViewComponent },\r\n    { path: ':id', component: ShopProductDetailsComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ShopProductsRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ShopProductDetailsComponent } from './shop-product-details/shop-product-details.component';\r\nimport { ShopProductsFilterComponent } from './shop-products-filter/shop-products-filter.component';\r\nimport { ShopProductsRoutingModule } from './shop-products-routing.module';\r\nimport { ShopProductsSortComponent } from './shop-products-sort/shop-products-sort.component';\r\nimport { ShopProductsViewComponent } from './shop-products-view/shop-products-view.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    ShopProductsRoutingModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ShopProductsFilterComponent,\r\n    ShopProductsSortComponent,\r\n    ShopProductDetailsComponent,\r\n    ShopProductsViewComponent\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\n\r\nexport class ShopProductsModule {\r\n}\r\n"]}